{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/html2json/index.js","webpack:///./node_modules/jsondiffpatch/dist/jsondiffpatch.umd.js","webpack:///./scripts/content.js","webpack:///./node_modules/html2json/src/html2json.js","webpack:///./node_modules/html2json/lib/Pure-JavaScript-HTML5-Parser/htmlparser.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","chalk","_typeof","iterator","obj","constructor","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","inherits","subClass","superClass","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","slicedToArray","arr","Array","isArray","_arr","_n","_d","_e","_s","_i","next","done","push","err","sliceIterator","toConsumableArray","arr2","from","Processor","options","this","selfOptions","pipes","_options","pipeArg","pipe","processor","input","context","nextPipe","lastPipe","lastContext","nextAfterChildren","process","hasResult","result","Pipe","filters","Error","debug","index","filter","log","filterName","exiting","resultCheck","msg","console","_filters","apply","arguments","_filters2","unshift","map","f","indexOf","params","slice","splice","should","error","noResult","Context","child","childName","root","children","a","clone","arg","Date","getTime","RegExp","regexMatch","exec","toString","cloned","DiffContext","_Context","left","right","_this","cloneDiffValues","clone$$1","setResult","PatchContext","delta","ReverseContext","isArray$1","diffFilter","leftType","rightType","leftIsArray","rightIsArray","exit","patchFilter","nested","regexArgs","reverseFilter","collectChildrenDiffFilter","_t","objectsDiffFilter","propertyFilter","patchFilter$1","collectChildrenPatchFilter","reverseFilter$1","collectChildrenReverseFilter","defaultMatch","array1","array2","index1","index2","lcs","match","innerContext","backtrack","matrix","sequence","indices1","indices2","subsequence","len1","len2","x","y","Math","max","lengthMatrix","join","isArray$2","arrayIndexOf","array","item","matchItems","value1","value2","objectHash","matchByPosition","hash1","hash2","hashCache1","hashCache2","diffFilter$1","matchContext","commonHead","commonTail","val1","val2","arraysHaveMatchByRef","trimmed1","trimmed2","seq","removedItems","detectMove","arrays","includeValueOnMove","removedItemsLength","indexOnArray2","isMove","removeItemIndex1","compare","b","patchFilter$2","toRemove","toInsert","toModify","parseInt","sort","indexDiff","removedValue","toInsertLength","insertion","toModifyLength","modification","collectChildrenPatchFilter$1","reverseFilter$2","newName","substr","reverseArrayDeltaIndex","itemDelta","reverseIndex","deltaIndex","deltaItem","moveFromIndex","moveToIndex","collectChildrenReverseFilter$1","diffFilter$2","diffMatchPatch","fn","createCommonjsModule","diff_match_patch","Diff_Timeout","Diff_EditCost","Match_Threshold","Match_Distance","Patch_DeleteThreshold","Patch_Margin","Match_MaxBits","diff_main","text1","text2","opt_checklines","opt_deadline","Number","MAX_VALUE","deadline","checklines","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","diff_compute_","diff_cleanupMerge","longtext","shorttext","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","concat","diff_lineMode_","diff_bisect_","diff_linesToChars_","chars1","chars2","linearray","lineArray","diff_charsToLines_","diff_cleanupSemantic","pointer","count_delete","count_insert","text_delete","text_insert","j","pop","text1_length","text2_length","max_d","ceil","v_offset","v_length","v1","v2","front","k1start","k1end","k2start","k2end","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","text1a","text2a","text1b","text2b","diffsb","lineHash","diff_linesToCharsMunge_","text","chars","lineStart","lineEnd","lineArrayLength","line","String","fromCharCode","charCodeAt","pointermin","pointermax","min","pointermid","pointerstart","floor","pointerend","diff_commonOverlap_","text_length","best","pattern","found","dmp","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","best_common","prefixLength","suffixLength","hm1","hm2","changes","equalities","equalitiesLength","lastequality","length_insertions1","length_deletions1","length_insertions2","length_deletions2","diff_cleanupSemanticLossless","deletion","overlap_length1","overlap_length2","diff_cleanupSemanticScore_","one","two","char1","char2","nonAlphaNumeric1","nonAlphaNumericRegex_","nonAlphaNumeric2","whitespace1","whitespaceRegex_","whitespace2","lineBreak1","linebreakRegex_","lineBreak2","blankLine1","blanklineEndRegex_","blankLine2","blanklineStartRegex_","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","score","diff_cleanupEfficiency","pre_ins","pre_del","post_ins","post_del","diff_xIndex","loc","last_chars1","last_chars2","diff_prettyHtml","html","pattern_amp","pattern_lt","pattern_gt","pattern_para","op","replace","diff_text1","diff_text2","diff_levenshtein","levenshtein","insertions","deletions","data","diff_toDelta","encodeURI","diff_fromDelta","diffsLength","tokens","split","param","decodeURI","ex","isNaN","match_main","match_bitap_","match_alphabet_","match_bitapScore_","e","accuracy","proximity","abs","score_threshold","best_loc","lastIndexOf","bin_min","bin_mid","matchmask","last_rd","bin_max","start","finish","rd","charMatch","patch_addContext_","patch","start2","length1","padding","prefix","suffix","start1","length2","patch_make","opt_b","opt_c","patches","patch_obj","patchDiffLength","char_count1","char_count2","prepatch_text","postpatch_text","diff_type","diff_text","patch_deepCopy","patchesCopy","patchCopy","patch_apply","nullPadding","patch_addPadding","patch_splitMax","results","start_loc","expected_loc","end_loc","mod","paddingLength","extraLength","patch_size","bigpatch","precontext","empty","shift","postcontext","patch_toText","patch_fromText","textline","textPointer","patchHeader","sign","cachedDiffPatch","getDiffMatchPatch","required","diff_match_patch_not_found","diff","txt1","txt2","_patch","textPatchFailed","diffFilter$3","minLength","textDiff","diffMatchPatch$$1","patchFilter$3","textDeltaReverse","lines","lineTmp","header","headerRegex","reverseFilter$3","DiffPatcher","append","shouldHaveResult","_processor","reverse","isArray$3","getObjectKeys","keys","names","arrayKeyToSortNumber","arrayKeyComparer","key1","key2","BaseFormatter","prepareContext","recurse","finalize","buffer","out","_buffer","deltaType","_ref","leftKey","movedFrom","isLast","leftValue","type","getDeltaType","nodeType","nodeBegin","rootBegin","typeFormattterNotFound","typeFormattterErrorFormatter","stack","nodeEnd","rootEnd","forEachDeltaKey","str","arrayKeys","moveDestinations","includeMoveDestinations","output","lineOutput","pieces","location","chr","pieceIndex","piecesLength","piece","pieceOutput","base","freeze","default","HtmlFormatter","_BaseFormatter","htmlEscape","JSON","stringify","parseTextDiff","nodeClass","hasArrows","adjustArrows","formatValue","formatDeltaChildren","formatTextDiffString","replacements","nodeArg","node","document","el","query","elems","querySelectorAll","eachByQuery","_ref3","parentNode","style","arrowParent","svg","path","display","textContent","innerText","destination","querySelector","container","destinationElem","_ref2","eachChildren","getAttribute","distance","offsetTop","setAttribute","top","curve","round","showUnchanged","show","delay","body","classes","showing","hiding","visible","hidden","list","classList","remove","add","setTimeout","intervalId","setInterval","clearInterval","defaultInstance","hideUnchanged","format","AnnotatedFormatter","indent","levels","indentLevel","indentPad","row","json","htmlNote","wrapPropertyName","deltaAnnotations","added","formatLegend","modified","deleted","moved","textdiff","formatAnyChange","annotator","format_added","format_modified","format_deleted","format_moved","format_textdiff","defaultInstance$1","annotated","OPERATIONS","JSONFormatter","pushCurrentOp","val","currentPath","pushMoveOp","to","toPath","last","opsByDescendingOrder","removeOps","pred","indexA","indexB","lastA","lastB","splitA","splitB","partitionOps","fns","initArr","fill","position","reduce","acc","isMoveOp","isRemoveOp","_ref4","defaultInstance$2","format$2","_partitionOps","_partitionOps2","moveOps","removedOps","restOps","removeOpsReverse","reorderOps","jsonpatch","chalkColor","_len","args","_key","colors","movedestination","unchanged","textDiffLine","ConsoleFormatter","outLine","_len2","_key2","color","pushColor","popColor","defaultInstance$3","format$3","console$1","defaultInstance$4","formatters","dateReviver","parts","UTC","unpatch","factory","chrome","runtime","sendMessage","DOM","outputString","outerHTML","splitted","createHTMLString","response","cb","oldValue","newValue","content","makeDIFF","diffPercent","calculateDiffPercent","DIFF","prev","percent","global","DEBUG","html2json","removeDOCTYPE","bufArray","HTMLParser","tag","attrs","unary","attr","pre","end","comment","json2html","startTag","endTag","makeMap","block","inline","closeSelf","fillAttrs","special","handler","all","parseEndTag","parseStartTag","tagName","rest","toLowerCase","escaped","pos","items","HTMLtoXML","HTMLtoDOM","doc","structure","link","ownerDocument","getOwnerDocument","DOMDocument","implementation","createDocument","ActiveX","ActiveXObject","documentElement","getDocumentElement","createElement","head","appendChild","getElementsByTagName","curParentNode","elem","createTextNode"],"mappings":"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","file":"content-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require('./src/html2json');\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('./empty')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', './empty'], factory) :\n\t(factory((global.jsondiffpatch = {}),global.chalk));\n}(this, (function (exports,chalk) { 'use strict';\n\nchalk = chalk && chalk.hasOwnProperty('default') ? chalk['default'] : chalk;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar Processor = function () {\n  function Processor(options) {\n    classCallCheck(this, Processor);\n\n    this.selfOptions = options || {};\n    this.pipes = {};\n  }\n\n  createClass(Processor, [{\n    key: 'options',\n    value: function options(_options) {\n      if (_options) {\n        this.selfOptions = _options;\n      }\n      return this.selfOptions;\n    }\n  }, {\n    key: 'pipe',\n    value: function pipe(name, pipeArg) {\n      var pipe = pipeArg;\n      if (typeof name === 'string') {\n        if (typeof pipe === 'undefined') {\n          return this.pipes[name];\n        } else {\n          this.pipes[name] = pipe;\n        }\n      }\n      if (name && name.name) {\n        pipe = name;\n        if (pipe.processor === this) {\n          return pipe;\n        }\n        this.pipes[pipe.name] = pipe;\n      }\n      pipe.processor = this;\n      return pipe;\n    }\n  }, {\n    key: 'process',\n    value: function process(input, pipe) {\n      var context = input;\n      context.options = this.options();\n      var nextPipe = pipe || input.pipe || 'default';\n      var lastPipe = void 0;\n      var lastContext = void 0;\n      while (nextPipe) {\n        if (typeof context.nextAfterChildren !== 'undefined') {\n          // children processed and coming back to parent\n          context.next = context.nextAfterChildren;\n          context.nextAfterChildren = null;\n        }\n\n        if (typeof nextPipe === 'string') {\n          nextPipe = this.pipe(nextPipe);\n        }\n        nextPipe.process(context);\n        lastContext = context;\n        lastPipe = nextPipe;\n        nextPipe = null;\n        if (context) {\n          if (context.next) {\n            context = context.next;\n            nextPipe = lastContext.nextPipe || context.pipe || lastPipe;\n          }\n        }\n      }\n      return context.hasResult ? context.result : undefined;\n    }\n  }]);\n  return Processor;\n}();\n\nvar Pipe = function () {\n  function Pipe(name) {\n    classCallCheck(this, Pipe);\n\n    this.name = name;\n    this.filters = [];\n  }\n\n  createClass(Pipe, [{\n    key: 'process',\n    value: function process(input) {\n      if (!this.processor) {\n        throw new Error('add this pipe to a processor before using it');\n      }\n      var debug = this.debug;\n      var length = this.filters.length;\n      var context = input;\n      for (var index = 0; index < length; index++) {\n        var filter = this.filters[index];\n        if (debug) {\n          this.log('filter: ' + filter.filterName);\n        }\n        filter(context);\n        if ((typeof context === 'undefined' ? 'undefined' : _typeof(context)) === 'object' && context.exiting) {\n          context.exiting = false;\n          break;\n        }\n      }\n      if (!context.next && this.resultCheck) {\n        this.resultCheck(context);\n      }\n    }\n  }, {\n    key: 'log',\n    value: function log(msg) {\n      console.log('[jsondiffpatch] ' + this.name + ' pipe, ' + msg);\n    }\n  }, {\n    key: 'append',\n    value: function append() {\n      var _filters;\n\n      (_filters = this.filters).push.apply(_filters, arguments);\n      return this;\n    }\n  }, {\n    key: 'prepend',\n    value: function prepend() {\n      var _filters2;\n\n      (_filters2 = this.filters).unshift.apply(_filters2, arguments);\n      return this;\n    }\n  }, {\n    key: 'indexOf',\n    value: function indexOf(filterName) {\n      if (!filterName) {\n        throw new Error('a filter name is required');\n      }\n      for (var index = 0; index < this.filters.length; index++) {\n        var filter = this.filters[index];\n        if (filter.filterName === filterName) {\n          return index;\n        }\n      }\n      throw new Error('filter not found: ' + filterName);\n    }\n  }, {\n    key: 'list',\n    value: function list() {\n      return this.filters.map(function (f) {\n        return f.filterName;\n      });\n    }\n  }, {\n    key: 'after',\n    value: function after(filterName) {\n      var index = this.indexOf(filterName);\n      var params = Array.prototype.slice.call(arguments, 1);\n      if (!params.length) {\n        throw new Error('a filter is required');\n      }\n      params.unshift(index + 1, 0);\n      Array.prototype.splice.apply(this.filters, params);\n      return this;\n    }\n  }, {\n    key: 'before',\n    value: function before(filterName) {\n      var index = this.indexOf(filterName);\n      var params = Array.prototype.slice.call(arguments, 1);\n      if (!params.length) {\n        throw new Error('a filter is required');\n      }\n      params.unshift(index, 0);\n      Array.prototype.splice.apply(this.filters, params);\n      return this;\n    }\n  }, {\n    key: 'replace',\n    value: function replace(filterName) {\n      var index = this.indexOf(filterName);\n      var params = Array.prototype.slice.call(arguments, 1);\n      if (!params.length) {\n        throw new Error('a filter is required');\n      }\n      params.unshift(index, 1);\n      Array.prototype.splice.apply(this.filters, params);\n      return this;\n    }\n  }, {\n    key: 'remove',\n    value: function remove(filterName) {\n      var index = this.indexOf(filterName);\n      this.filters.splice(index, 1);\n      return this;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.filters.length = 0;\n      return this;\n    }\n  }, {\n    key: 'shouldHaveResult',\n    value: function shouldHaveResult(should) {\n      if (should === false) {\n        this.resultCheck = null;\n        return;\n      }\n      if (this.resultCheck) {\n        return;\n      }\n      var pipe = this;\n      this.resultCheck = function (context) {\n        if (!context.hasResult) {\n          console.log(context);\n          var error = new Error(pipe.name + ' failed');\n          error.noResult = true;\n          throw error;\n        }\n      };\n      return this;\n    }\n  }]);\n  return Pipe;\n}();\n\nvar Context = function () {\n  function Context() {\n    classCallCheck(this, Context);\n  }\n\n  createClass(Context, [{\n    key: 'setResult',\n    value: function setResult(result) {\n      this.result = result;\n      this.hasResult = true;\n      return this;\n    }\n  }, {\n    key: 'exit',\n    value: function exit() {\n      this.exiting = true;\n      return this;\n    }\n  }, {\n    key: 'switchTo',\n    value: function switchTo(next, pipe) {\n      if (typeof next === 'string' || next instanceof Pipe) {\n        this.nextPipe = next;\n      } else {\n        this.next = next;\n        if (pipe) {\n          this.nextPipe = pipe;\n        }\n      }\n      return this;\n    }\n  }, {\n    key: 'push',\n    value: function push(child, name) {\n      child.parent = this;\n      if (typeof name !== 'undefined') {\n        child.childName = name;\n      }\n      child.root = this.root || this;\n      child.options = child.options || this.options;\n      if (!this.children) {\n        this.children = [child];\n        this.nextAfterChildren = this.next || null;\n        this.next = child;\n      } else {\n        this.children[this.children.length - 1].next = child;\n        this.children.push(child);\n      }\n      child.next = this;\n      return this;\n    }\n  }]);\n  return Context;\n}();\n\nvar isArray = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nfunction cloneRegExp(re) {\n  var regexMatch = /^\\/(.*)\\/([gimyu]*)$/.exec(re.toString());\n  return new RegExp(regexMatch[1], regexMatch[2]);\n}\n\nfunction clone(arg) {\n  if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) !== 'object') {\n    return arg;\n  }\n  if (arg === null) {\n    return null;\n  }\n  if (isArray(arg)) {\n    return arg.map(clone);\n  }\n  if (arg instanceof Date) {\n    return new Date(arg.getTime());\n  }\n  if (arg instanceof RegExp) {\n    return cloneRegExp(arg);\n  }\n  var cloned = {};\n  for (var name in arg) {\n    if (Object.prototype.hasOwnProperty.call(arg, name)) {\n      cloned[name] = clone(arg[name]);\n    }\n  }\n  return cloned;\n}\n\nvar DiffContext = function (_Context) {\n  inherits(DiffContext, _Context);\n\n  function DiffContext(left, right) {\n    classCallCheck(this, DiffContext);\n\n    var _this = possibleConstructorReturn(this, (DiffContext.__proto__ || Object.getPrototypeOf(DiffContext)).call(this));\n\n    _this.left = left;\n    _this.right = right;\n    _this.pipe = 'diff';\n    return _this;\n  }\n\n  createClass(DiffContext, [{\n    key: 'setResult',\n    value: function setResult(result) {\n      if (this.options.cloneDiffValues && (typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object') {\n        var clone$$1 = typeof this.options.cloneDiffValues === 'function' ? this.options.cloneDiffValues : clone;\n        if (_typeof(result[0]) === 'object') {\n          result[0] = clone$$1(result[0]);\n        }\n        if (_typeof(result[1]) === 'object') {\n          result[1] = clone$$1(result[1]);\n        }\n      }\n      return Context.prototype.setResult.apply(this, arguments);\n    }\n  }]);\n  return DiffContext;\n}(Context);\n\nvar PatchContext = function (_Context) {\n  inherits(PatchContext, _Context);\n\n  function PatchContext(left, delta) {\n    classCallCheck(this, PatchContext);\n\n    var _this = possibleConstructorReturn(this, (PatchContext.__proto__ || Object.getPrototypeOf(PatchContext)).call(this));\n\n    _this.left = left;\n    _this.delta = delta;\n    _this.pipe = 'patch';\n    return _this;\n  }\n\n  return PatchContext;\n}(Context);\n\nvar ReverseContext = function (_Context) {\n  inherits(ReverseContext, _Context);\n\n  function ReverseContext(delta) {\n    classCallCheck(this, ReverseContext);\n\n    var _this = possibleConstructorReturn(this, (ReverseContext.__proto__ || Object.getPrototypeOf(ReverseContext)).call(this));\n\n    _this.delta = delta;\n    _this.pipe = 'reverse';\n    return _this;\n  }\n\n  return ReverseContext;\n}(Context);\n\nvar isArray$1 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nvar diffFilter = function trivialMatchesDiffFilter(context) {\n  if (context.left === context.right) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  if (typeof context.left === 'undefined') {\n    if (typeof context.right === 'function') {\n      throw new Error('functions are not supported');\n    }\n    context.setResult([context.right]).exit();\n    return;\n  }\n  if (typeof context.right === 'undefined') {\n    context.setResult([context.left, 0, 0]).exit();\n    return;\n  }\n  if (typeof context.left === 'function' || typeof context.right === 'function') {\n    throw new Error('functions are not supported');\n  }\n  context.leftType = context.left === null ? 'null' : _typeof(context.left);\n  context.rightType = context.right === null ? 'null' : _typeof(context.right);\n  if (context.leftType !== context.rightType) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  if (context.leftType === 'boolean' || context.leftType === 'number') {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  if (context.leftType === 'object') {\n    context.leftIsArray = isArray$1(context.left);\n  }\n  if (context.rightType === 'object') {\n    context.rightIsArray = isArray$1(context.right);\n  }\n  if (context.leftIsArray !== context.rightIsArray) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n\n  if (context.left instanceof RegExp) {\n    if (context.right instanceof RegExp) {\n      context.setResult([context.left.toString(), context.right.toString()]).exit();\n    } else {\n      context.setResult([context.left, context.right]).exit();\n    }\n  }\n};\ndiffFilter.filterName = 'trivial';\n\nvar patchFilter = function trivialMatchesPatchFilter(context) {\n  if (typeof context.delta === 'undefined') {\n    context.setResult(context.left).exit();\n    return;\n  }\n  context.nested = !isArray$1(context.delta);\n  if (context.nested) {\n    return;\n  }\n  if (context.delta.length === 1) {\n    context.setResult(context.delta[0]).exit();\n    return;\n  }\n  if (context.delta.length === 2) {\n    if (context.left instanceof RegExp) {\n      var regexArgs = /^\\/(.*)\\/([gimyu]+)$/.exec(context.delta[1]);\n      if (regexArgs) {\n        context.setResult(new RegExp(regexArgs[1], regexArgs[2])).exit();\n        return;\n      }\n    }\n    context.setResult(context.delta[1]).exit();\n    return;\n  }\n  if (context.delta.length === 3 && context.delta[2] === 0) {\n    context.setResult(undefined).exit();\n  }\n};\npatchFilter.filterName = 'trivial';\n\nvar reverseFilter = function trivialReferseFilter(context) {\n  if (typeof context.delta === 'undefined') {\n    context.setResult(context.delta).exit();\n    return;\n  }\n  context.nested = !isArray$1(context.delta);\n  if (context.nested) {\n    return;\n  }\n  if (context.delta.length === 1) {\n    context.setResult([context.delta[0], 0, 0]).exit();\n    return;\n  }\n  if (context.delta.length === 2) {\n    context.setResult([context.delta[1], context.delta[0]]).exit();\n    return;\n  }\n  if (context.delta.length === 3 && context.delta[2] === 0) {\n    context.setResult([context.delta[0]]).exit();\n  }\n};\nreverseFilter.filterName = 'trivial';\n\nfunction collectChildrenDiffFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  var result = context.result;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (typeof child.result === 'undefined') {\n      continue;\n    }\n    result = result || {};\n    result[child.childName] = child.result;\n  }\n  if (result && context.leftIsArray) {\n    result._t = 'a';\n  }\n  context.setResult(result).exit();\n}\ncollectChildrenDiffFilter.filterName = 'collectChildren';\n\nfunction objectsDiffFilter(context) {\n  if (context.leftIsArray || context.leftType !== 'object') {\n    return;\n  }\n\n  var name = void 0;\n  var child = void 0;\n  var propertyFilter = context.options.propertyFilter;\n  for (name in context.left) {\n    if (!Object.prototype.hasOwnProperty.call(context.left, name)) {\n      continue;\n    }\n    if (propertyFilter && !propertyFilter(name, context)) {\n      continue;\n    }\n    child = new DiffContext(context.left[name], context.right[name]);\n    context.push(child, name);\n  }\n  for (name in context.right) {\n    if (!Object.prototype.hasOwnProperty.call(context.right, name)) {\n      continue;\n    }\n    if (propertyFilter && !propertyFilter(name, context)) {\n      continue;\n    }\n    if (typeof context.left[name] === 'undefined') {\n      child = new DiffContext(undefined, context.right[name]);\n      context.push(child, name);\n    }\n  }\n\n  if (!context.children || context.children.length === 0) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  context.exit();\n}\nobjectsDiffFilter.filterName = 'objects';\n\nvar patchFilter$1 = function nestedPatchFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var name = void 0;\n  var child = void 0;\n  for (name in context.delta) {\n    child = new PatchContext(context.left[name], context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\npatchFilter$1.filterName = 'objects';\n\nvar collectChildrenPatchFilter = function collectChildrenPatchFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (Object.prototype.hasOwnProperty.call(context.left, child.childName) && child.result === undefined) {\n      delete context.left[child.childName];\n    } else if (context.left[child.childName] !== child.result) {\n      context.left[child.childName] = child.result;\n    }\n  }\n  context.setResult(context.left).exit();\n};\ncollectChildrenPatchFilter.filterName = 'collectChildren';\n\nvar reverseFilter$1 = function nestedReverseFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var name = void 0;\n  var child = void 0;\n  for (name in context.delta) {\n    child = new ReverseContext(context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\nreverseFilter$1.filterName = 'objects';\n\nfunction collectChildrenReverseFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  var delta = {};\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (delta[child.childName] !== child.result) {\n      delta[child.childName] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n}\ncollectChildrenReverseFilter.filterName = 'collectChildren';\n\n/*\n\nLCS implementation that supports arrays or strings\n\nreference: http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n\n*/\n\nvar defaultMatch = function defaultMatch(array1, array2, index1, index2) {\n  return array1[index1] === array2[index2];\n};\n\nvar lengthMatrix = function lengthMatrix(array1, array2, match, context) {\n  var len1 = array1.length;\n  var len2 = array2.length;\n  var x = void 0,\n      y = void 0;\n\n  // initialize empty matrix of len1+1 x len2+1\n  var matrix = [len1 + 1];\n  for (x = 0; x < len1 + 1; x++) {\n    matrix[x] = [len2 + 1];\n    for (y = 0; y < len2 + 1; y++) {\n      matrix[x][y] = 0;\n    }\n  }\n  matrix.match = match;\n  // save sequence lengths for each coordinate\n  for (x = 1; x < len1 + 1; x++) {\n    for (y = 1; y < len2 + 1; y++) {\n      if (match(array1, array2, x - 1, y - 1, context)) {\n        matrix[x][y] = matrix[x - 1][y - 1] + 1;\n      } else {\n        matrix[x][y] = Math.max(matrix[x - 1][y], matrix[x][y - 1]);\n      }\n    }\n  }\n  return matrix;\n};\n\nvar backtrack = function backtrack(matrix, array1, array2, index1, index2, context) {\n  if (index1 === 0 || index2 === 0) {\n    return {\n      sequence: [],\n      indices1: [],\n      indices2: []\n    };\n  }\n\n  if (matrix.match(array1, array2, index1 - 1, index2 - 1, context)) {\n    var subsequence = backtrack(matrix, array1, array2, index1 - 1, index2 - 1, context);\n    subsequence.sequence.push(array1[index1 - 1]);\n    subsequence.indices1.push(index1 - 1);\n    subsequence.indices2.push(index2 - 1);\n    return subsequence;\n  }\n\n  if (matrix[index1][index2 - 1] > matrix[index1 - 1][index2]) {\n    return backtrack(matrix, array1, array2, index1, index2 - 1, context);\n  } else {\n    return backtrack(matrix, array1, array2, index1 - 1, index2, context);\n  }\n};\n\nvar get$1 = function get(array1, array2, match, context) {\n  var innerContext = context || {};\n  var matrix = lengthMatrix(array1, array2, match || defaultMatch, innerContext);\n  var result = backtrack(matrix, array1, array2, array1.length, array2.length, innerContext);\n  if (typeof array1 === 'string' && typeof array2 === 'string') {\n    result.sequence = result.sequence.join('');\n  }\n  return result;\n};\n\nvar lcs = {\n  get: get$1\n};\n\nvar ARRAY_MOVE = 3;\n\nvar isArray$2 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nvar arrayIndexOf = typeof Array.prototype.indexOf === 'function' ? function (array, item) {\n  return array.indexOf(item);\n} : function (array, item) {\n  var length = array.length;\n  for (var i = 0; i < length; i++) {\n    if (array[i] === item) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nfunction arraysHaveMatchByRef(array1, array2, len1, len2) {\n  for (var index1 = 0; index1 < len1; index1++) {\n    var val1 = array1[index1];\n    for (var index2 = 0; index2 < len2; index2++) {\n      var val2 = array2[index2];\n      if (index1 !== index2 && val1 === val2) {\n        return true;\n      }\n    }\n  }\n}\n\nfunction matchItems(array1, array2, index1, index2, context) {\n  var value1 = array1[index1];\n  var value2 = array2[index2];\n  if (value1 === value2) {\n    return true;\n  }\n  if ((typeof value1 === 'undefined' ? 'undefined' : _typeof(value1)) !== 'object' || (typeof value2 === 'undefined' ? 'undefined' : _typeof(value2)) !== 'object') {\n    return false;\n  }\n  var objectHash = context.objectHash;\n  if (!objectHash) {\n    // no way to match objects was provided, try match by position\n    return context.matchByPosition && index1 === index2;\n  }\n  var hash1 = void 0;\n  var hash2 = void 0;\n  if (typeof index1 === 'number') {\n    context.hashCache1 = context.hashCache1 || [];\n    hash1 = context.hashCache1[index1];\n    if (typeof hash1 === 'undefined') {\n      context.hashCache1[index1] = hash1 = objectHash(value1, index1);\n    }\n  } else {\n    hash1 = objectHash(value1);\n  }\n  if (typeof hash1 === 'undefined') {\n    return false;\n  }\n  if (typeof index2 === 'number') {\n    context.hashCache2 = context.hashCache2 || [];\n    hash2 = context.hashCache2[index2];\n    if (typeof hash2 === 'undefined') {\n      context.hashCache2[index2] = hash2 = objectHash(value2, index2);\n    }\n  } else {\n    hash2 = objectHash(value2);\n  }\n  if (typeof hash2 === 'undefined') {\n    return false;\n  }\n  return hash1 === hash2;\n}\n\nvar diffFilter$1 = function arraysDiffFilter(context) {\n  if (!context.leftIsArray) {\n    return;\n  }\n\n  var matchContext = {\n    objectHash: context.options && context.options.objectHash,\n    matchByPosition: context.options && context.options.matchByPosition\n  };\n  var commonHead = 0;\n  var commonTail = 0;\n  var index = void 0;\n  var index1 = void 0;\n  var index2 = void 0;\n  var array1 = context.left;\n  var array2 = context.right;\n  var len1 = array1.length;\n  var len2 = array2.length;\n\n  var child = void 0;\n\n  if (len1 > 0 && len2 > 0 && !matchContext.objectHash && typeof matchContext.matchByPosition !== 'boolean') {\n    matchContext.matchByPosition = !arraysHaveMatchByRef(array1, array2, len1, len2);\n  }\n\n  // separate common head\n  while (commonHead < len1 && commonHead < len2 && matchItems(array1, array2, commonHead, commonHead, matchContext)) {\n    index = commonHead;\n    child = new DiffContext(context.left[index], context.right[index]);\n    context.push(child, index);\n    commonHead++;\n  }\n  // separate common tail\n  while (commonTail + commonHead < len1 && commonTail + commonHead < len2 && matchItems(array1, array2, len1 - 1 - commonTail, len2 - 1 - commonTail, matchContext)) {\n    index1 = len1 - 1 - commonTail;\n    index2 = len2 - 1 - commonTail;\n    child = new DiffContext(context.left[index1], context.right[index2]);\n    context.push(child, index2);\n    commonTail++;\n  }\n  var result = void 0;\n  if (commonHead + commonTail === len1) {\n    if (len1 === len2) {\n      // arrays are identical\n      context.setResult(undefined).exit();\n      return;\n    }\n    // trivial case, a block (1 or more consecutive items) was added\n    result = result || {\n      _t: 'a'\n    };\n    for (index = commonHead; index < len2 - commonTail; index++) {\n      result[index] = [array2[index]];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  if (commonHead + commonTail === len2) {\n    // trivial case, a block (1 or more consecutive items) was removed\n    result = result || {\n      _t: 'a'\n    };\n    for (index = commonHead; index < len1 - commonTail; index++) {\n      result['_' + index] = [array1[index], 0, 0];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  // reset hash cache\n  delete matchContext.hashCache1;\n  delete matchContext.hashCache2;\n\n  // diff is not trivial, find the LCS (Longest Common Subsequence)\n  var trimmed1 = array1.slice(commonHead, len1 - commonTail);\n  var trimmed2 = array2.slice(commonHead, len2 - commonTail);\n  var seq = lcs.get(trimmed1, trimmed2, matchItems, matchContext);\n  var removedItems = [];\n  result = result || {\n    _t: 'a'\n  };\n  for (index = commonHead; index < len1 - commonTail; index++) {\n    if (arrayIndexOf(seq.indices1, index - commonHead) < 0) {\n      // removed\n      result['_' + index] = [array1[index], 0, 0];\n      removedItems.push(index);\n    }\n  }\n\n  var detectMove = true;\n  if (context.options && context.options.arrays && context.options.arrays.detectMove === false) {\n    detectMove = false;\n  }\n  var includeValueOnMove = false;\n  if (context.options && context.options.arrays && context.options.arrays.includeValueOnMove) {\n    includeValueOnMove = true;\n  }\n\n  var removedItemsLength = removedItems.length;\n  for (index = commonHead; index < len2 - commonTail; index++) {\n    var indexOnArray2 = arrayIndexOf(seq.indices2, index - commonHead);\n    if (indexOnArray2 < 0) {\n      // added, try to match with a removed item and register as position move\n      var isMove = false;\n      if (detectMove && removedItemsLength > 0) {\n        for (var removeItemIndex1 = 0; removeItemIndex1 < removedItemsLength; removeItemIndex1++) {\n          index1 = removedItems[removeItemIndex1];\n          if (matchItems(trimmed1, trimmed2, index1 - commonHead, index - commonHead, matchContext)) {\n            // store position move as: [originalValue, newPosition, ARRAY_MOVE]\n            result['_' + index1].splice(1, 2, index, ARRAY_MOVE);\n            if (!includeValueOnMove) {\n              // don't include moved value on diff, to save bytes\n              result['_' + index1][0] = '';\n            }\n\n            index2 = index;\n            child = new DiffContext(context.left[index1], context.right[index2]);\n            context.push(child, index2);\n            removedItems.splice(removeItemIndex1, 1);\n            isMove = true;\n            break;\n          }\n        }\n      }\n      if (!isMove) {\n        // added\n        result[index] = [array2[index]];\n      }\n    } else {\n      // match, do inner diff\n      index1 = seq.indices1[indexOnArray2] + commonHead;\n      index2 = seq.indices2[indexOnArray2] + commonHead;\n      child = new DiffContext(context.left[index1], context.right[index2]);\n      context.push(child, index2);\n    }\n  }\n\n  context.setResult(result).exit();\n};\ndiffFilter$1.filterName = 'arrays';\n\nvar compare = {\n  numerically: function numerically(a, b) {\n    return a - b;\n  },\n  numericallyBy: function numericallyBy(name) {\n    return function (a, b) {\n      return a[name] - b[name];\n    };\n  }\n};\n\nvar patchFilter$2 = function nestedPatchFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var index = void 0;\n  var index1 = void 0;\n\n  var delta = context.delta;\n  var array = context.left;\n\n  // first, separate removals, insertions and modifications\n  var toRemove = [];\n  var toInsert = [];\n  var toModify = [];\n  for (index in delta) {\n    if (index !== '_t') {\n      if (index[0] === '_') {\n        // removed item from original array\n        if (delta[index][2] === 0 || delta[index][2] === ARRAY_MOVE) {\n          toRemove.push(parseInt(index.slice(1), 10));\n        } else {\n          throw new Error('only removal or move can be applied at original array indices,' + (' invalid diff type: ' + delta[index][2]));\n        }\n      } else {\n        if (delta[index].length === 1) {\n          // added item at new array\n          toInsert.push({\n            index: parseInt(index, 10),\n            value: delta[index][0]\n          });\n        } else {\n          // modified item at new array\n          toModify.push({\n            index: parseInt(index, 10),\n            delta: delta[index]\n          });\n        }\n      }\n    }\n  }\n\n  // remove items, in reverse order to avoid sawing our own floor\n  toRemove = toRemove.sort(compare.numerically);\n  for (index = toRemove.length - 1; index >= 0; index--) {\n    index1 = toRemove[index];\n    var indexDiff = delta['_' + index1];\n    var removedValue = array.splice(index1, 1)[0];\n    if (indexDiff[2] === ARRAY_MOVE) {\n      // reinsert later\n      toInsert.push({\n        index: indexDiff[1],\n        value: removedValue\n      });\n    }\n  }\n\n  // insert items, in reverse order to avoid moving our own floor\n  toInsert = toInsert.sort(compare.numericallyBy('index'));\n  var toInsertLength = toInsert.length;\n  for (index = 0; index < toInsertLength; index++) {\n    var insertion = toInsert[index];\n    array.splice(insertion.index, 0, insertion.value);\n  }\n\n  // apply modifications\n  var toModifyLength = toModify.length;\n  var child = void 0;\n  if (toModifyLength > 0) {\n    for (index = 0; index < toModifyLength; index++) {\n      var modification = toModify[index];\n      child = new PatchContext(context.left[modification.index], modification.delta);\n      context.push(child, modification.index);\n    }\n  }\n\n  if (!context.children) {\n    context.setResult(context.left).exit();\n    return;\n  }\n  context.exit();\n};\npatchFilter$2.filterName = 'arrays';\n\nvar collectChildrenPatchFilter$1 = function collectChildrenPatchFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    context.left[child.childName] = child.result;\n  }\n  context.setResult(context.left).exit();\n};\ncollectChildrenPatchFilter$1.filterName = 'arraysCollectChildren';\n\nvar reverseFilter$2 = function arraysReverseFilter(context) {\n  if (!context.nested) {\n    if (context.delta[2] === ARRAY_MOVE) {\n      context.newName = '_' + context.delta[1];\n      context.setResult([context.delta[0], parseInt(context.childName.substr(1), 10), ARRAY_MOVE]).exit();\n    }\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var name = void 0;\n  var child = void 0;\n  for (name in context.delta) {\n    if (name === '_t') {\n      continue;\n    }\n    child = new ReverseContext(context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\nreverseFilter$2.filterName = 'arrays';\n\nvar reverseArrayDeltaIndex = function reverseArrayDeltaIndex(delta, index, itemDelta) {\n  if (typeof index === 'string' && index[0] === '_') {\n    return parseInt(index.substr(1), 10);\n  } else if (isArray$2(itemDelta) && itemDelta[2] === 0) {\n    return '_' + index;\n  }\n\n  var reverseIndex = +index;\n  for (var deltaIndex in delta) {\n    var deltaItem = delta[deltaIndex];\n    if (isArray$2(deltaItem)) {\n      if (deltaItem[2] === ARRAY_MOVE) {\n        var moveFromIndex = parseInt(deltaIndex.substr(1), 10);\n        var moveToIndex = deltaItem[1];\n        if (moveToIndex === +index) {\n          return moveFromIndex;\n        }\n        if (moveFromIndex <= reverseIndex && moveToIndex > reverseIndex) {\n          reverseIndex++;\n        } else if (moveFromIndex >= reverseIndex && moveToIndex < reverseIndex) {\n          reverseIndex--;\n        }\n      } else if (deltaItem[2] === 0) {\n        var deleteIndex = parseInt(deltaIndex.substr(1), 10);\n        if (deleteIndex <= reverseIndex) {\n          reverseIndex++;\n        }\n      } else if (deltaItem.length === 1 && deltaIndex <= reverseIndex) {\n        reverseIndex--;\n      }\n    }\n  }\n\n  return reverseIndex;\n};\n\nfunction collectChildrenReverseFilter$1(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  var delta = {\n    _t: 'a'\n  };\n\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    var name = child.newName;\n    if (typeof name === 'undefined') {\n      name = reverseArrayDeltaIndex(context.delta, child.childName, child.result);\n    }\n    if (delta[name] !== child.result) {\n      delta[name] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n}\ncollectChildrenReverseFilter$1.filterName = 'arraysCollectChildren';\n\nvar diffFilter$2 = function datesDiffFilter(context) {\n  if (context.left instanceof Date) {\n    if (context.right instanceof Date) {\n      if (context.left.getTime() !== context.right.getTime()) {\n        context.setResult([context.left, context.right]);\n      } else {\n        context.setResult(undefined);\n      }\n    } else {\n      context.setResult([context.left, context.right]);\n    }\n    context.exit();\n  } else if (context.right instanceof Date) {\n    context.setResult([context.left, context.right]).exit();\n  }\n};\ndiffFilter$2.filterName = 'dates';\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar diffMatchPatch = createCommonjsModule(function (module) {\nfunction diff_match_patch() {\r\n\r\n  // Defaults.\r\n  // Redefine these in your program to override the defaults.\r\n\r\n  // Number of seconds to map a diff before giving up (0 for infinity).\r\n  this.Diff_Timeout = 1.0;\r\n  // Cost of an empty edit operation in terms of edit characters.\r\n  this.Diff_EditCost = 4;\r\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\r\n  this.Match_Threshold = 0.5;\r\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\r\n  // A match this many characters away from the expected location will add\r\n  // 1.0 to the score (0.0 is a perfect match).\r\n  this.Match_Distance = 1000;\r\n  // When deleting a large block of text (over ~64 characters), how close do\r\n  // the contents have to be to match the expected contents. (0.0 = perfection,\r\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\r\n  // end points of a delete need to match.\r\n  this.Patch_DeleteThreshold = 0.5;\r\n  // Chunk size for context length.\r\n  this.Patch_Margin = 4;\r\n\r\n  // The number of bits in an int.\r\n  this.Match_MaxBits = 32;\r\n}\r\n\r\n\r\n//  DIFF FUNCTIONS\r\n\r\n\r\n/**\r\n * The data structure representing a diff is an array of tuples:\r\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\r\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\r\n */\r\nvar DIFF_DELETE = -1;\r\nvar DIFF_INSERT = 1;\r\nvar DIFF_EQUAL = 0;\r\n\r\n/** @typedef {{0: number, 1: string}} */\r\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\r\n    opt_deadline) {\r\n  // Set a deadline by which time the diff must be complete.\r\n  if (typeof opt_deadline == 'undefined') {\r\n    if (this.Diff_Timeout <= 0) {\r\n      opt_deadline = Number.MAX_VALUE;\r\n    } else {\r\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\r\n    }\r\n  }\r\n  var deadline = opt_deadline;\r\n\r\n  // Check for null inputs.\r\n  if (text1 == null || text2 == null) {\r\n    throw new Error('Null input. (diff_main)');\r\n  }\r\n\r\n  // Check for equality (speedup).\r\n  if (text1 == text2) {\r\n    if (text1) {\r\n      return [[DIFF_EQUAL, text1]];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  if (typeof opt_checklines == 'undefined') {\r\n    opt_checklines = true;\r\n  }\r\n  var checklines = opt_checklines;\r\n\r\n  // Trim off common prefix (speedup).\r\n  var commonlength = this.diff_commonPrefix(text1, text2);\r\n  var commonprefix = text1.substring(0, commonlength);\r\n  text1 = text1.substring(commonlength);\r\n  text2 = text2.substring(commonlength);\r\n\r\n  // Trim off common suffix (speedup).\r\n  commonlength = this.diff_commonSuffix(text1, text2);\r\n  var commonsuffix = text1.substring(text1.length - commonlength);\r\n  text1 = text1.substring(0, text1.length - commonlength);\r\n  text2 = text2.substring(0, text2.length - commonlength);\r\n\r\n  // Compute the diff on the middle block.\r\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\r\n\r\n  // Restore the prefix and suffix.\r\n  if (commonprefix) {\r\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\r\n  }\r\n  if (commonsuffix) {\r\n    diffs.push([DIFF_EQUAL, commonsuffix]);\r\n  }\r\n  this.diff_cleanupMerge(diffs);\r\n  return diffs;\r\n};\r\n\r\n\r\n/**\r\n * Find the differences between two texts.  Assumes that the texts do not\r\n * have any common prefix or suffix.\r\n * @param {string} text1 Old string to be diffed.\r\n * @param {string} text2 New string to be diffed.\r\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\r\n *     line-level diff first to identify the changed areas.\r\n *     If true, then run a faster, slightly less optimal diff.\r\n * @param {number} deadline Time when the diff should be complete by.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\r\n    deadline) {\r\n  var diffs;\r\n\r\n  if (!text1) {\r\n    // Just add some text (speedup).\r\n    return [[DIFF_INSERT, text2]];\r\n  }\r\n\r\n  if (!text2) {\r\n    // Just delete some text (speedup).\r\n    return [[DIFF_DELETE, text1]];\r\n  }\r\n\r\n  var longtext = text1.length > text2.length ? text1 : text2;\r\n  var shorttext = text1.length > text2.length ? text2 : text1;\r\n  var i = longtext.indexOf(shorttext);\r\n  if (i != -1) {\r\n    // Shorter text is inside the longer text (speedup).\r\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\r\n             [DIFF_EQUAL, shorttext],\r\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\r\n    // Swap insertions for deletions if diff is reversed.\r\n    if (text1.length > text2.length) {\r\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\r\n    }\r\n    return diffs;\r\n  }\r\n\r\n  if (shorttext.length == 1) {\r\n    // Single character string.\r\n    // After the previous speedup, the character can't be an equality.\r\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\r\n  }\r\n\r\n  // Check to see if the problem can be split in two.\r\n  var hm = this.diff_halfMatch_(text1, text2);\r\n  if (hm) {\r\n    // A half-match was found, sort out the return data.\r\n    var text1_a = hm[0];\r\n    var text1_b = hm[1];\r\n    var text2_a = hm[2];\r\n    var text2_b = hm[3];\r\n    var mid_common = hm[4];\r\n    // Send both pairs off for separate processing.\r\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\r\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\r\n    // Merge the results.\r\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\r\n  }\r\n\r\n  if (checklines && text1.length > 100 && text2.length > 100) {\r\n    return this.diff_lineMode_(text1, text2, deadline);\r\n  }\r\n\r\n  return this.diff_bisect_(text1, text2, deadline);\r\n};\r\n\r\n\r\n/**\r\n * Do a quick line-level diff on both strings, then rediff the parts for\r\n * greater accuracy.\r\n * This speedup can produce non-minimal diffs.\r\n * @param {string} text1 Old string to be diffed.\r\n * @param {string} text2 New string to be diffed.\r\n * @param {number} deadline Time when the diff should be complete by.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\r\n  // Scan the text on a line-by-line basis first.\r\n  var a = this.diff_linesToChars_(text1, text2);\r\n  text1 = a.chars1;\r\n  text2 = a.chars2;\r\n  var linearray = a.lineArray;\r\n\r\n  var diffs = this.diff_main(text1, text2, false, deadline);\r\n\r\n  // Convert the diff back to original text.\r\n  this.diff_charsToLines_(diffs, linearray);\r\n  // Eliminate freak matches (e.g. blank lines)\r\n  this.diff_cleanupSemantic(diffs);\r\n\r\n  // Rediff any replacement blocks, this time character-by-character.\r\n  // Add a dummy entry at the end.\r\n  diffs.push([DIFF_EQUAL, '']);\r\n  var pointer = 0;\r\n  var count_delete = 0;\r\n  var count_insert = 0;\r\n  var text_delete = '';\r\n  var text_insert = '';\r\n  while (pointer < diffs.length) {\r\n    switch (diffs[pointer][0]) {\r\n      case DIFF_INSERT:\r\n        count_insert++;\r\n        text_insert += diffs[pointer][1];\r\n        break;\r\n      case DIFF_DELETE:\r\n        count_delete++;\r\n        text_delete += diffs[pointer][1];\r\n        break;\r\n      case DIFF_EQUAL:\r\n        // Upon reaching an equality, check for prior redundancies.\r\n        if (count_delete >= 1 && count_insert >= 1) {\r\n          // Delete the offending records and add the merged ones.\r\n          diffs.splice(pointer - count_delete - count_insert,\r\n                       count_delete + count_insert);\r\n          pointer = pointer - count_delete - count_insert;\r\n          var a = this.diff_main(text_delete, text_insert, false, deadline);\r\n          for (var j = a.length - 1; j >= 0; j--) {\r\n            diffs.splice(pointer, 0, a[j]);\r\n          }\r\n          pointer = pointer + a.length;\r\n        }\r\n        count_insert = 0;\r\n        count_delete = 0;\r\n        text_delete = '';\r\n        text_insert = '';\r\n        break;\r\n    }\r\n    pointer++;\r\n  }\r\n  diffs.pop();  // Remove the dummy entry at the end.\r\n\r\n  return diffs;\r\n};\r\n\r\n\r\n/**\r\n * Find the 'middle snake' of a diff, split the problem in two\r\n * and return the recursively constructed diff.\r\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\r\n * @param {string} text1 Old string to be diffed.\r\n * @param {string} text2 New string to be diffed.\r\n * @param {number} deadline Time at which to bail if not yet complete.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\r\n  // Cache the text lengths to prevent multiple calls.\r\n  var text1_length = text1.length;\r\n  var text2_length = text2.length;\r\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\r\n  var v_offset = max_d;\r\n  var v_length = 2 * max_d;\r\n  var v1 = new Array(v_length);\r\n  var v2 = new Array(v_length);\r\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\r\n  // integers and undefined.\r\n  for (var x = 0; x < v_length; x++) {\r\n    v1[x] = -1;\r\n    v2[x] = -1;\r\n  }\r\n  v1[v_offset + 1] = 0;\r\n  v2[v_offset + 1] = 0;\r\n  var delta = text1_length - text2_length;\r\n  // If the total number of characters is odd, then the front path will collide\r\n  // with the reverse path.\r\n  var front = (delta % 2 != 0);\r\n  // Offsets for start and end of k loop.\r\n  // Prevents mapping of space beyond the grid.\r\n  var k1start = 0;\r\n  var k1end = 0;\r\n  var k2start = 0;\r\n  var k2end = 0;\r\n  for (var d = 0; d < max_d; d++) {\r\n    // Bail out if deadline is reached.\r\n    if ((new Date()).getTime() > deadline) {\r\n      break;\r\n    }\r\n\r\n    // Walk the front path one step.\r\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\r\n      var k1_offset = v_offset + k1;\r\n      var x1;\r\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\r\n        x1 = v1[k1_offset + 1];\r\n      } else {\r\n        x1 = v1[k1_offset - 1] + 1;\r\n      }\r\n      var y1 = x1 - k1;\r\n      while (x1 < text1_length && y1 < text2_length &&\r\n             text1.charAt(x1) == text2.charAt(y1)) {\r\n        x1++;\r\n        y1++;\r\n      }\r\n      v1[k1_offset] = x1;\r\n      if (x1 > text1_length) {\r\n        // Ran off the right of the graph.\r\n        k1end += 2;\r\n      } else if (y1 > text2_length) {\r\n        // Ran off the bottom of the graph.\r\n        k1start += 2;\r\n      } else if (front) {\r\n        var k2_offset = v_offset + delta - k1;\r\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\r\n          // Mirror x2 onto top-left coordinate system.\r\n          var x2 = text1_length - v2[k2_offset];\r\n          if (x1 >= x2) {\r\n            // Overlap detected.\r\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Walk the reverse path one step.\r\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\r\n      var k2_offset = v_offset + k2;\r\n      var x2;\r\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\r\n        x2 = v2[k2_offset + 1];\r\n      } else {\r\n        x2 = v2[k2_offset - 1] + 1;\r\n      }\r\n      var y2 = x2 - k2;\r\n      while (x2 < text1_length && y2 < text2_length &&\r\n             text1.charAt(text1_length - x2 - 1) ==\r\n             text2.charAt(text2_length - y2 - 1)) {\r\n        x2++;\r\n        y2++;\r\n      }\r\n      v2[k2_offset] = x2;\r\n      if (x2 > text1_length) {\r\n        // Ran off the left of the graph.\r\n        k2end += 2;\r\n      } else if (y2 > text2_length) {\r\n        // Ran off the top of the graph.\r\n        k2start += 2;\r\n      } else if (!front) {\r\n        var k1_offset = v_offset + delta - k2;\r\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\r\n          var x1 = v1[k1_offset];\r\n          var y1 = v_offset + x1 - k1_offset;\r\n          // Mirror x2 onto top-left coordinate system.\r\n          x2 = text1_length - x2;\r\n          if (x1 >= x2) {\r\n            // Overlap detected.\r\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Diff took too long and hit the deadline or\r\n  // number of diffs equals number of characters, no commonality at all.\r\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\r\n};\r\n\r\n\r\n/**\r\n * Given the location of the 'middle snake', split the diff in two parts\r\n * and recurse.\r\n * @param {string} text1 Old string to be diffed.\r\n * @param {string} text2 New string to be diffed.\r\n * @param {number} x Index of split point in text1.\r\n * @param {number} y Index of split point in text2.\r\n * @param {number} deadline Time at which to bail if not yet complete.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\r\n    deadline) {\r\n  var text1a = text1.substring(0, x);\r\n  var text2a = text2.substring(0, y);\r\n  var text1b = text1.substring(x);\r\n  var text2b = text2.substring(y);\r\n\r\n  // Compute both diffs serially.\r\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\r\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\r\n\r\n  return diffs.concat(diffsb);\r\n};\r\n\r\n\r\n/**\r\n * Split two texts into an array of strings.  Reduce the texts to a string of\r\n * hashes where each Unicode character represents one line.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\r\n *     An object containing the encoded text1, the encoded text2 and\r\n *     the array of unique strings.\r\n *     The zeroth element of the array of unique strings is intentionally blank.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\r\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\r\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\r\n\r\n  // '\\x00' is a valid character, but various debuggers don't like it.\r\n  // So we'll insert a junk entry to avoid generating a null character.\r\n  lineArray[0] = '';\r\n\r\n  /**\r\n   * Split a text into an array of strings.  Reduce the texts to a string of\r\n   * hashes where each Unicode character represents one line.\r\n   * Modifies linearray and linehash through being a closure.\r\n   * @param {string} text String to encode.\r\n   * @return {string} Encoded string.\r\n   * @private\r\n   */\r\n  function diff_linesToCharsMunge_(text) {\r\n    var chars = '';\r\n    // Walk the text, pulling out a substring for each line.\r\n    // text.split('\\n') would would temporarily double our memory footprint.\r\n    // Modifying text would create many large strings to garbage collect.\r\n    var lineStart = 0;\r\n    var lineEnd = -1;\r\n    // Keeping our own length variable is faster than looking it up.\r\n    var lineArrayLength = lineArray.length;\r\n    while (lineEnd < text.length - 1) {\r\n      lineEnd = text.indexOf('\\n', lineStart);\r\n      if (lineEnd == -1) {\r\n        lineEnd = text.length - 1;\r\n      }\r\n      var line = text.substring(lineStart, lineEnd + 1);\r\n      lineStart = lineEnd + 1;\r\n\r\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\r\n          (lineHash[line] !== undefined)) {\r\n        chars += String.fromCharCode(lineHash[line]);\r\n      } else {\r\n        chars += String.fromCharCode(lineArrayLength);\r\n        lineHash[line] = lineArrayLength;\r\n        lineArray[lineArrayLength++] = line;\r\n      }\r\n    }\r\n    return chars;\r\n  }\r\n\r\n  var chars1 = diff_linesToCharsMunge_(text1);\r\n  var chars2 = diff_linesToCharsMunge_(text2);\r\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\r\n};\r\n\r\n\r\n/**\r\n * Rehydrate the text in a diff from a string of line hashes to real lines of\r\n * text.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @param {!Array.<string>} lineArray Array of unique strings.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    var chars = diffs[x][1];\r\n    var text = [];\r\n    for (var y = 0; y < chars.length; y++) {\r\n      text[y] = lineArray[chars.charCodeAt(y)];\r\n    }\r\n    diffs[x][1] = text.join('');\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Determine the common prefix of two strings.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {number} The number of characters common to the start of each\r\n *     string.\r\n */\r\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\r\n  // Quick check for common null cases.\r\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\r\n    return 0;\r\n  }\r\n  // Binary search.\r\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\r\n  var pointermin = 0;\r\n  var pointermax = Math.min(text1.length, text2.length);\r\n  var pointermid = pointermax;\r\n  var pointerstart = 0;\r\n  while (pointermin < pointermid) {\r\n    if (text1.substring(pointerstart, pointermid) ==\r\n        text2.substring(pointerstart, pointermid)) {\r\n      pointermin = pointermid;\r\n      pointerstart = pointermin;\r\n    } else {\r\n      pointermax = pointermid;\r\n    }\r\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\r\n  }\r\n  return pointermid;\r\n};\r\n\r\n\r\n/**\r\n * Determine the common suffix of two strings.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {number} The number of characters common to the end of each string.\r\n */\r\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\r\n  // Quick check for common null cases.\r\n  if (!text1 || !text2 ||\r\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\r\n    return 0;\r\n  }\r\n  // Binary search.\r\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\r\n  var pointermin = 0;\r\n  var pointermax = Math.min(text1.length, text2.length);\r\n  var pointermid = pointermax;\r\n  var pointerend = 0;\r\n  while (pointermin < pointermid) {\r\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\r\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\r\n      pointermin = pointermid;\r\n      pointerend = pointermin;\r\n    } else {\r\n      pointermax = pointermid;\r\n    }\r\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\r\n  }\r\n  return pointermid;\r\n};\r\n\r\n\r\n/**\r\n * Determine if the suffix of one string is the prefix of another.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {number} The number of characters common to the end of the first\r\n *     string and the start of the second string.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\r\n  // Cache the text lengths to prevent multiple calls.\r\n  var text1_length = text1.length;\r\n  var text2_length = text2.length;\r\n  // Eliminate the null case.\r\n  if (text1_length == 0 || text2_length == 0) {\r\n    return 0;\r\n  }\r\n  // Truncate the longer string.\r\n  if (text1_length > text2_length) {\r\n    text1 = text1.substring(text1_length - text2_length);\r\n  } else if (text1_length < text2_length) {\r\n    text2 = text2.substring(0, text1_length);\r\n  }\r\n  var text_length = Math.min(text1_length, text2_length);\r\n  // Quick check for the worst case.\r\n  if (text1 == text2) {\r\n    return text_length;\r\n  }\r\n\r\n  // Start by looking for a single character match\r\n  // and increase length until no match is found.\r\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\r\n  var best = 0;\r\n  var length = 1;\r\n  while (true) {\r\n    var pattern = text1.substring(text_length - length);\r\n    var found = text2.indexOf(pattern);\r\n    if (found == -1) {\r\n      return best;\r\n    }\r\n    length += found;\r\n    if (found == 0 || text1.substring(text_length - length) ==\r\n        text2.substring(0, length)) {\r\n      best = length;\r\n      length++;\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Do the two texts share a substring which is at least half the length of the\r\n * longer text?\r\n * This speedup can produce non-minimal diffs.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {Array.<string>} Five element Array, containing the prefix of\r\n *     text1, the suffix of text1, the prefix of text2, the suffix of\r\n *     text2 and the common middle.  Or null if there was no match.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\r\n  if (this.Diff_Timeout <= 0) {\r\n    // Don't risk returning a non-optimal diff if we have unlimited time.\r\n    return null;\r\n  }\r\n  var longtext = text1.length > text2.length ? text1 : text2;\r\n  var shorttext = text1.length > text2.length ? text2 : text1;\r\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\r\n    return null;  // Pointless.\r\n  }\r\n  var dmp = this;  // 'this' becomes 'window' in a closure.\r\n\r\n  /**\r\n   * Does a substring of shorttext exist within longtext such that the substring\r\n   * is at least half the length of longtext?\r\n   * Closure, but does not reference any external variables.\r\n   * @param {string} longtext Longer string.\r\n   * @param {string} shorttext Shorter string.\r\n   * @param {number} i Start index of quarter length substring within longtext.\r\n   * @return {Array.<string>} Five element Array, containing the prefix of\r\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\r\n   *     of shorttext and the common middle.  Or null if there was no match.\r\n   * @private\r\n   */\r\n  function diff_halfMatchI_(longtext, shorttext, i) {\r\n    // Start with a 1/4 length substring at position i as a seed.\r\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\r\n    var j = -1;\r\n    var best_common = '';\r\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\r\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\r\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\r\n                                               shorttext.substring(j));\r\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\r\n                                               shorttext.substring(0, j));\r\n      if (best_common.length < suffixLength + prefixLength) {\r\n        best_common = shorttext.substring(j - suffixLength, j) +\r\n            shorttext.substring(j, j + prefixLength);\r\n        best_longtext_a = longtext.substring(0, i - suffixLength);\r\n        best_longtext_b = longtext.substring(i + prefixLength);\r\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\r\n        best_shorttext_b = shorttext.substring(j + prefixLength);\r\n      }\r\n    }\r\n    if (best_common.length * 2 >= longtext.length) {\r\n      return [best_longtext_a, best_longtext_b,\r\n              best_shorttext_a, best_shorttext_b, best_common];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // First check if the second quarter is the seed for a half-match.\r\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\r\n                             Math.ceil(longtext.length / 4));\r\n  // Check again based on the third quarter.\r\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\r\n                             Math.ceil(longtext.length / 2));\r\n  var hm;\r\n  if (!hm1 && !hm2) {\r\n    return null;\r\n  } else if (!hm2) {\r\n    hm = hm1;\r\n  } else if (!hm1) {\r\n    hm = hm2;\r\n  } else {\r\n    // Both matched.  Select the longest.\r\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\r\n  }\r\n\r\n  // A half-match was found, sort out the return data.\r\n  var text1_a, text1_b, text2_a, text2_b;\r\n  if (text1.length > text2.length) {\r\n    text1_a = hm[0];\r\n    text1_b = hm[1];\r\n    text2_a = hm[2];\r\n    text2_b = hm[3];\r\n  } else {\r\n    text2_a = hm[0];\r\n    text2_b = hm[1];\r\n    text1_a = hm[2];\r\n    text1_b = hm[3];\r\n  }\r\n  var mid_common = hm[4];\r\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\r\n};\r\n\r\n\r\n/**\r\n * Reduce the number of edits by eliminating semantically trivial equalities.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n */\r\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\r\n  var changes = false;\r\n  var equalities = [];  // Stack of indices where equalities are found.\r\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\r\n  /** @type {?string} */\r\n  var lastequality = null;\r\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\r\n  var pointer = 0;  // Index of current position.\r\n  // Number of characters that changed prior to the equality.\r\n  var length_insertions1 = 0;\r\n  var length_deletions1 = 0;\r\n  // Number of characters that changed after the equality.\r\n  var length_insertions2 = 0;\r\n  var length_deletions2 = 0;\r\n  while (pointer < diffs.length) {\r\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\r\n      equalities[equalitiesLength++] = pointer;\r\n      length_insertions1 = length_insertions2;\r\n      length_deletions1 = length_deletions2;\r\n      length_insertions2 = 0;\r\n      length_deletions2 = 0;\r\n      lastequality = diffs[pointer][1];\r\n    } else {  // An insertion or deletion.\r\n      if (diffs[pointer][0] == DIFF_INSERT) {\r\n        length_insertions2 += diffs[pointer][1].length;\r\n      } else {\r\n        length_deletions2 += diffs[pointer][1].length;\r\n      }\r\n      // Eliminate an equality that is smaller or equal to the edits on both\r\n      // sides of it.\r\n      if (lastequality && (lastequality.length <=\r\n          Math.max(length_insertions1, length_deletions1)) &&\r\n          (lastequality.length <= Math.max(length_insertions2,\r\n                                           length_deletions2))) {\r\n        // Duplicate record.\r\n        diffs.splice(equalities[equalitiesLength - 1], 0,\r\n                     [DIFF_DELETE, lastequality]);\r\n        // Change second copy to insert.\r\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\r\n        // Throw away the equality we just deleted.\r\n        equalitiesLength--;\r\n        // Throw away the previous equality (it needs to be reevaluated).\r\n        equalitiesLength--;\r\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\r\n        length_insertions1 = 0;  // Reset the counters.\r\n        length_deletions1 = 0;\r\n        length_insertions2 = 0;\r\n        length_deletions2 = 0;\r\n        lastequality = null;\r\n        changes = true;\r\n      }\r\n    }\r\n    pointer++;\r\n  }\r\n\r\n  // Normalize the diff.\r\n  if (changes) {\r\n    this.diff_cleanupMerge(diffs);\r\n  }\r\n  this.diff_cleanupSemanticLossless(diffs);\r\n\r\n  // Find any overlaps between deletions and insertions.\r\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\r\n  //   -> <del>abc</del>xxx<ins>def</ins>\r\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\r\n  //   -> <ins>def</ins>xxx<del>abc</del>\r\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\r\n  pointer = 1;\r\n  while (pointer < diffs.length) {\r\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\r\n        diffs[pointer][0] == DIFF_INSERT) {\r\n      var deletion = diffs[pointer - 1][1];\r\n      var insertion = diffs[pointer][1];\r\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\r\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\r\n      if (overlap_length1 >= overlap_length2) {\r\n        if (overlap_length1 >= deletion.length / 2 ||\r\n            overlap_length1 >= insertion.length / 2) {\r\n          // Overlap found.  Insert an equality and trim the surrounding edits.\r\n          diffs.splice(pointer, 0,\r\n              [DIFF_EQUAL, insertion.substring(0, overlap_length1)]);\r\n          diffs[pointer - 1][1] =\r\n              deletion.substring(0, deletion.length - overlap_length1);\r\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\r\n          pointer++;\r\n        }\r\n      } else {\r\n        if (overlap_length2 >= deletion.length / 2 ||\r\n            overlap_length2 >= insertion.length / 2) {\r\n          // Reverse overlap found.\r\n          // Insert an equality and swap and trim the surrounding edits.\r\n          diffs.splice(pointer, 0,\r\n              [DIFF_EQUAL, deletion.substring(0, overlap_length2)]);\r\n          diffs[pointer - 1][0] = DIFF_INSERT;\r\n          diffs[pointer - 1][1] =\r\n              insertion.substring(0, insertion.length - overlap_length2);\r\n          diffs[pointer + 1][0] = DIFF_DELETE;\r\n          diffs[pointer + 1][1] =\r\n              deletion.substring(overlap_length2);\r\n          pointer++;\r\n        }\r\n      }\r\n      pointer++;\r\n    }\r\n    pointer++;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Look for single edits surrounded on both sides by equalities\r\n * which can be shifted sideways to align the edit to a word boundary.\r\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n */\r\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\r\n  /**\r\n   * Given two strings, compute a score representing whether the internal\r\n   * boundary falls on logical boundaries.\r\n   * Scores range from 6 (best) to 0 (worst).\r\n   * Closure, but does not reference any external variables.\r\n   * @param {string} one First string.\r\n   * @param {string} two Second string.\r\n   * @return {number} The score.\r\n   * @private\r\n   */\r\n  function diff_cleanupSemanticScore_(one, two) {\r\n    if (!one || !two) {\r\n      // Edges are the best.\r\n      return 6;\r\n    }\r\n\r\n    // Each port of this function behaves slightly differently due to\r\n    // subtle differences in each language's definition of things like\r\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\r\n    // the choice has been made to use each language's native features\r\n    // rather than force total conformity.\r\n    var char1 = one.charAt(one.length - 1);\r\n    var char2 = two.charAt(0);\r\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\r\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\r\n    var whitespace1 = nonAlphaNumeric1 &&\r\n        char1.match(diff_match_patch.whitespaceRegex_);\r\n    var whitespace2 = nonAlphaNumeric2 &&\r\n        char2.match(diff_match_patch.whitespaceRegex_);\r\n    var lineBreak1 = whitespace1 &&\r\n        char1.match(diff_match_patch.linebreakRegex_);\r\n    var lineBreak2 = whitespace2 &&\r\n        char2.match(diff_match_patch.linebreakRegex_);\r\n    var blankLine1 = lineBreak1 &&\r\n        one.match(diff_match_patch.blanklineEndRegex_);\r\n    var blankLine2 = lineBreak2 &&\r\n        two.match(diff_match_patch.blanklineStartRegex_);\r\n\r\n    if (blankLine1 || blankLine2) {\r\n      // Five points for blank lines.\r\n      return 5;\r\n    } else if (lineBreak1 || lineBreak2) {\r\n      // Four points for line breaks.\r\n      return 4;\r\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\r\n      // Three points for end of sentences.\r\n      return 3;\r\n    } else if (whitespace1 || whitespace2) {\r\n      // Two points for whitespace.\r\n      return 2;\r\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\r\n      // One point for non-alphanumeric.\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  var pointer = 1;\r\n  // Intentionally ignore the first and last element (don't need checking).\r\n  while (pointer < diffs.length - 1) {\r\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\r\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\r\n      // This is a single edit surrounded by equalities.\r\n      var equality1 = diffs[pointer - 1][1];\r\n      var edit = diffs[pointer][1];\r\n      var equality2 = diffs[pointer + 1][1];\r\n\r\n      // First, shift the edit as far left as possible.\r\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\r\n      if (commonOffset) {\r\n        var commonString = edit.substring(edit.length - commonOffset);\r\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\r\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\r\n        equality2 = commonString + equality2;\r\n      }\r\n\r\n      // Second, step character by character right, looking for the best fit.\r\n      var bestEquality1 = equality1;\r\n      var bestEdit = edit;\r\n      var bestEquality2 = equality2;\r\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\r\n          diff_cleanupSemanticScore_(edit, equality2);\r\n      while (edit.charAt(0) === equality2.charAt(0)) {\r\n        equality1 += edit.charAt(0);\r\n        edit = edit.substring(1) + equality2.charAt(0);\r\n        equality2 = equality2.substring(1);\r\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\r\n            diff_cleanupSemanticScore_(edit, equality2);\r\n        // The >= encourages trailing rather than leading whitespace on edits.\r\n        if (score >= bestScore) {\r\n          bestScore = score;\r\n          bestEquality1 = equality1;\r\n          bestEdit = edit;\r\n          bestEquality2 = equality2;\r\n        }\r\n      }\r\n\r\n      if (diffs[pointer - 1][1] != bestEquality1) {\r\n        // We have an improvement, save it back to the diff.\r\n        if (bestEquality1) {\r\n          diffs[pointer - 1][1] = bestEquality1;\r\n        } else {\r\n          diffs.splice(pointer - 1, 1);\r\n          pointer--;\r\n        }\r\n        diffs[pointer][1] = bestEdit;\r\n        if (bestEquality2) {\r\n          diffs[pointer + 1][1] = bestEquality2;\r\n        } else {\r\n          diffs.splice(pointer + 1, 1);\r\n          pointer--;\r\n        }\r\n      }\r\n    }\r\n    pointer++;\r\n  }\r\n};\r\n\r\n// Define some regex patterns for matching boundaries.\r\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\r\ndiff_match_patch.whitespaceRegex_ = /\\s/;\r\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\r\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\r\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\r\n\r\n/**\r\n * Reduce the number of edits by eliminating operationally trivial equalities.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n */\r\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\r\n  var changes = false;\r\n  var equalities = [];  // Stack of indices where equalities are found.\r\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\r\n  /** @type {?string} */\r\n  var lastequality = null;\r\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\r\n  var pointer = 0;  // Index of current position.\r\n  // Is there an insertion operation before the last equality.\r\n  var pre_ins = false;\r\n  // Is there a deletion operation before the last equality.\r\n  var pre_del = false;\r\n  // Is there an insertion operation after the last equality.\r\n  var post_ins = false;\r\n  // Is there a deletion operation after the last equality.\r\n  var post_del = false;\r\n  while (pointer < diffs.length) {\r\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\r\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\r\n          (post_ins || post_del)) {\r\n        // Candidate found.\r\n        equalities[equalitiesLength++] = pointer;\r\n        pre_ins = post_ins;\r\n        pre_del = post_del;\r\n        lastequality = diffs[pointer][1];\r\n      } else {\r\n        // Not a candidate, and can never become one.\r\n        equalitiesLength = 0;\r\n        lastequality = null;\r\n      }\r\n      post_ins = post_del = false;\r\n    } else {  // An insertion or deletion.\r\n      if (diffs[pointer][0] == DIFF_DELETE) {\r\n        post_del = true;\r\n      } else {\r\n        post_ins = true;\r\n      }\r\n      /*\r\n       * Five types to be split:\r\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\r\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\r\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\r\n       * <ins>A</del>X<ins>C</ins><del>D</del>\r\n       * <ins>A</ins><del>B</del>X<del>C</del>\r\n       */\r\n      if (lastequality && ((pre_ins && pre_del && post_ins && post_del) ||\r\n                           ((lastequality.length < this.Diff_EditCost / 2) &&\r\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\r\n        // Duplicate record.\r\n        diffs.splice(equalities[equalitiesLength - 1], 0,\r\n                     [DIFF_DELETE, lastequality]);\r\n        // Change second copy to insert.\r\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\r\n        equalitiesLength--;  // Throw away the equality we just deleted;\r\n        lastequality = null;\r\n        if (pre_ins && pre_del) {\r\n          // No changes made which could affect previous entry, keep going.\r\n          post_ins = post_del = true;\r\n          equalitiesLength = 0;\r\n        } else {\r\n          equalitiesLength--;  // Throw away the previous equality.\r\n          pointer = equalitiesLength > 0 ?\r\n              equalities[equalitiesLength - 1] : -1;\r\n          post_ins = post_del = false;\r\n        }\r\n        changes = true;\r\n      }\r\n    }\r\n    pointer++;\r\n  }\r\n\r\n  if (changes) {\r\n    this.diff_cleanupMerge(diffs);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Reorder and merge like edit sections.  Merge equalities.\r\n * Any edit section can move as long as it doesn't cross an equality.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n */\r\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\r\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\r\n  var pointer = 0;\r\n  var count_delete = 0;\r\n  var count_insert = 0;\r\n  var text_delete = '';\r\n  var text_insert = '';\r\n  var commonlength;\r\n  while (pointer < diffs.length) {\r\n    switch (diffs[pointer][0]) {\r\n      case DIFF_INSERT:\r\n        count_insert++;\r\n        text_insert += diffs[pointer][1];\r\n        pointer++;\r\n        break;\r\n      case DIFF_DELETE:\r\n        count_delete++;\r\n        text_delete += diffs[pointer][1];\r\n        pointer++;\r\n        break;\r\n      case DIFF_EQUAL:\r\n        // Upon reaching an equality, check for prior redundancies.\r\n        if (count_delete + count_insert > 1) {\r\n          if (count_delete !== 0 && count_insert !== 0) {\r\n            // Factor out any common prefixies.\r\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\r\n            if (commonlength !== 0) {\r\n              if ((pointer - count_delete - count_insert) > 0 &&\r\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\r\n                  DIFF_EQUAL) {\r\n                diffs[pointer - count_delete - count_insert - 1][1] +=\r\n                    text_insert.substring(0, commonlength);\r\n              } else {\r\n                diffs.splice(0, 0, [DIFF_EQUAL,\r\n                                    text_insert.substring(0, commonlength)]);\r\n                pointer++;\r\n              }\r\n              text_insert = text_insert.substring(commonlength);\r\n              text_delete = text_delete.substring(commonlength);\r\n            }\r\n            // Factor out any common suffixies.\r\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\r\n            if (commonlength !== 0) {\r\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\r\n                  commonlength) + diffs[pointer][1];\r\n              text_insert = text_insert.substring(0, text_insert.length -\r\n                  commonlength);\r\n              text_delete = text_delete.substring(0, text_delete.length -\r\n                  commonlength);\r\n            }\r\n          }\r\n          // Delete the offending records and add the merged ones.\r\n          if (count_delete === 0) {\r\n            diffs.splice(pointer - count_insert,\r\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\r\n          } else if (count_insert === 0) {\r\n            diffs.splice(pointer - count_delete,\r\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\r\n          } else {\r\n            diffs.splice(pointer - count_delete - count_insert,\r\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\r\n                [DIFF_INSERT, text_insert]);\r\n          }\r\n          pointer = pointer - count_delete - count_insert +\r\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\r\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\r\n          // Merge this equality with the previous one.\r\n          diffs[pointer - 1][1] += diffs[pointer][1];\r\n          diffs.splice(pointer, 1);\r\n        } else {\r\n          pointer++;\r\n        }\r\n        count_insert = 0;\r\n        count_delete = 0;\r\n        text_delete = '';\r\n        text_insert = '';\r\n        break;\r\n    }\r\n  }\r\n  if (diffs[diffs.length - 1][1] === '') {\r\n    diffs.pop();  // Remove the dummy entry at the end.\r\n  }\r\n\r\n  // Second pass: look for single edits surrounded on both sides by equalities\r\n  // which can be shifted sideways to eliminate an equality.\r\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\r\n  var changes = false;\r\n  pointer = 1;\r\n  // Intentionally ignore the first and last element (don't need checking).\r\n  while (pointer < diffs.length - 1) {\r\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\r\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\r\n      // This is a single edit surrounded by equalities.\r\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\r\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\r\n        // Shift the edit over the previous equality.\r\n        diffs[pointer][1] = diffs[pointer - 1][1] +\r\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\r\n                                        diffs[pointer - 1][1].length);\r\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\r\n        diffs.splice(pointer - 1, 1);\r\n        changes = true;\r\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\r\n          diffs[pointer + 1][1]) {\r\n        // Shift the edit over the next equality.\r\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\r\n        diffs[pointer][1] =\r\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\r\n            diffs[pointer + 1][1];\r\n        diffs.splice(pointer + 1, 1);\r\n        changes = true;\r\n      }\r\n    }\r\n    pointer++;\r\n  }\r\n  // If shifts were made, the diff needs reordering and another shift sweep.\r\n  if (changes) {\r\n    this.diff_cleanupMerge(diffs);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * loc is a location in text1, compute and return the equivalent location in\r\n * text2.\r\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @param {number} loc Location within text1.\r\n * @return {number} Location within text2.\r\n */\r\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\r\n  var chars1 = 0;\r\n  var chars2 = 0;\r\n  var last_chars1 = 0;\r\n  var last_chars2 = 0;\r\n  var x;\r\n  for (x = 0; x < diffs.length; x++) {\r\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\r\n      chars1 += diffs[x][1].length;\r\n    }\r\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\r\n      chars2 += diffs[x][1].length;\r\n    }\r\n    if (chars1 > loc) {  // Overshot the location.\r\n      break;\r\n    }\r\n    last_chars1 = chars1;\r\n    last_chars2 = chars2;\r\n  }\r\n  // Was the location was deleted?\r\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\r\n    return last_chars2;\r\n  }\r\n  // Add the remaining character length.\r\n  return last_chars2 + (loc - last_chars1);\r\n};\r\n\r\n\r\n/**\r\n * Convert a diff array into a pretty HTML report.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {string} HTML representation.\r\n */\r\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\r\n  var html = [];\r\n  var pattern_amp = /&/g;\r\n  var pattern_lt = /</g;\r\n  var pattern_gt = />/g;\r\n  var pattern_para = /\\n/g;\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\r\n    var data = diffs[x][1];  // Text of change.\r\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\r\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\r\n    switch (op) {\r\n      case DIFF_INSERT:\r\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\r\n        break;\r\n      case DIFF_DELETE:\r\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\r\n        break;\r\n      case DIFF_EQUAL:\r\n        html[x] = '<span>' + text + '</span>';\r\n        break;\r\n    }\r\n  }\r\n  return html.join('');\r\n};\r\n\r\n\r\n/**\r\n * Compute and return the source text (all equalities and deletions).\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {string} Source text.\r\n */\r\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\r\n  var text = [];\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    if (diffs[x][0] !== DIFF_INSERT) {\r\n      text[x] = diffs[x][1];\r\n    }\r\n  }\r\n  return text.join('');\r\n};\r\n\r\n\r\n/**\r\n * Compute and return the destination text (all equalities and insertions).\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {string} Destination text.\r\n */\r\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\r\n  var text = [];\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    if (diffs[x][0] !== DIFF_DELETE) {\r\n      text[x] = diffs[x][1];\r\n    }\r\n  }\r\n  return text.join('');\r\n};\r\n\r\n\r\n/**\r\n * Compute the Levenshtein distance; the number of inserted, deleted or\r\n * substituted characters.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {number} Number of changes.\r\n */\r\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\r\n  var levenshtein = 0;\r\n  var insertions = 0;\r\n  var deletions = 0;\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    var op = diffs[x][0];\r\n    var data = diffs[x][1];\r\n    switch (op) {\r\n      case DIFF_INSERT:\r\n        insertions += data.length;\r\n        break;\r\n      case DIFF_DELETE:\r\n        deletions += data.length;\r\n        break;\r\n      case DIFF_EQUAL:\r\n        // A deletion and an insertion is one substitution.\r\n        levenshtein += Math.max(insertions, deletions);\r\n        insertions = 0;\r\n        deletions = 0;\r\n        break;\r\n    }\r\n  }\r\n  levenshtein += Math.max(insertions, deletions);\r\n  return levenshtein;\r\n};\r\n\r\n\r\n/**\r\n * Crush the diff into an encoded string which describes the operations\r\n * required to transform text1 into text2.\r\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\r\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {string} Delta text.\r\n */\r\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\r\n  var text = [];\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    switch (diffs[x][0]) {\r\n      case DIFF_INSERT:\r\n        text[x] = '+' + encodeURI(diffs[x][1]);\r\n        break;\r\n      case DIFF_DELETE:\r\n        text[x] = '-' + diffs[x][1].length;\r\n        break;\r\n      case DIFF_EQUAL:\r\n        text[x] = '=' + diffs[x][1].length;\r\n        break;\r\n    }\r\n  }\r\n  return text.join('\\t').replace(/%20/g, ' ');\r\n};\r\n\r\n\r\n/**\r\n * Given the original text1, and an encoded string which describes the\r\n * operations required to transform text1 into text2, compute the full diff.\r\n * @param {string} text1 Source string for the diff.\r\n * @param {string} delta Delta text.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @throws {!Error} If invalid input.\r\n */\r\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\r\n  var diffs = [];\r\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\r\n  var pointer = 0;  // Cursor in text1\r\n  var tokens = delta.split(/\\t/g);\r\n  for (var x = 0; x < tokens.length; x++) {\r\n    // Each token begins with a one character parameter which specifies the\r\n    // operation of this token (delete, insert, equality).\r\n    var param = tokens[x].substring(1);\r\n    switch (tokens[x].charAt(0)) {\r\n      case '+':\r\n        try {\r\n          diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];\r\n        } catch (ex) {\r\n          // Malformed URI sequence.\r\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\r\n        }\r\n        break;\r\n      case '-':\r\n        // Fall through.\r\n      case '=':\r\n        var n = parseInt(param, 10);\r\n        if (isNaN(n) || n < 0) {\r\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\r\n        }\r\n        var text = text1.substring(pointer, pointer += n);\r\n        if (tokens[x].charAt(0) == '=') {\r\n          diffs[diffsLength++] = [DIFF_EQUAL, text];\r\n        } else {\r\n          diffs[diffsLength++] = [DIFF_DELETE, text];\r\n        }\r\n        break;\r\n      default:\r\n        // Blank tokens are ok (from a trailing \\t).\r\n        // Anything else is an error.\r\n        if (tokens[x]) {\r\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\r\n                          tokens[x]);\r\n        }\r\n    }\r\n  }\r\n  if (pointer != text1.length) {\r\n    throw new Error('Delta length (' + pointer +\r\n        ') does not equal source text length (' + text1.length + ').');\r\n  }\r\n  return diffs;\r\n};\r\n\r\n\r\n//  MATCH FUNCTIONS\r\n\r\n\r\n/**\r\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\r\n * @param {string} text The text to search.\r\n * @param {string} pattern The pattern to search for.\r\n * @param {number} loc The location to search around.\r\n * @return {number} Best match index or -1.\r\n */\r\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\r\n  // Check for null inputs.\r\n  if (text == null || pattern == null || loc == null) {\r\n    throw new Error('Null input. (match_main)');\r\n  }\r\n\r\n  loc = Math.max(0, Math.min(loc, text.length));\r\n  if (text == pattern) {\r\n    // Shortcut (potentially not guaranteed by the algorithm)\r\n    return 0;\r\n  } else if (!text.length) {\r\n    // Nothing to match.\r\n    return -1;\r\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\r\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\r\n    return loc;\r\n  } else {\r\n    // Do a fuzzy compare.\r\n    return this.match_bitap_(text, pattern, loc);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\r\n * Bitap algorithm.\r\n * @param {string} text The text to search.\r\n * @param {string} pattern The pattern to search for.\r\n * @param {number} loc The location to search around.\r\n * @return {number} Best match index or -1.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\r\n  if (pattern.length > this.Match_MaxBits) {\r\n    throw new Error('Pattern too long for this browser.');\r\n  }\r\n\r\n  // Initialise the alphabet.\r\n  var s = this.match_alphabet_(pattern);\r\n\r\n  var dmp = this;  // 'this' becomes 'window' in a closure.\r\n\r\n  /**\r\n   * Compute and return the score for a match with e errors and x location.\r\n   * Accesses loc and pattern through being a closure.\r\n   * @param {number} e Number of errors in match.\r\n   * @param {number} x Location of match.\r\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\r\n   * @private\r\n   */\r\n  function match_bitapScore_(e, x) {\r\n    var accuracy = e / pattern.length;\r\n    var proximity = Math.abs(loc - x);\r\n    if (!dmp.Match_Distance) {\r\n      // Dodge divide by zero error.\r\n      return proximity ? 1.0 : accuracy;\r\n    }\r\n    return accuracy + (proximity / dmp.Match_Distance);\r\n  }\r\n\r\n  // Highest score beyond which we give up.\r\n  var score_threshold = this.Match_Threshold;\r\n  // Is there a nearby exact match? (speedup)\r\n  var best_loc = text.indexOf(pattern, loc);\r\n  if (best_loc != -1) {\r\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\r\n    // What about in the other direction? (speedup)\r\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\r\n    if (best_loc != -1) {\r\n      score_threshold =\r\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\r\n    }\r\n  }\r\n\r\n  // Initialise the bit arrays.\r\n  var matchmask = 1 << (pattern.length - 1);\r\n  best_loc = -1;\r\n\r\n  var bin_min, bin_mid;\r\n  var bin_max = pattern.length + text.length;\r\n  var last_rd;\r\n  for (var d = 0; d < pattern.length; d++) {\r\n    // Scan for the best match; each iteration allows for one more error.\r\n    // Run a binary search to determine how far from 'loc' we can stray at this\r\n    // error level.\r\n    bin_min = 0;\r\n    bin_mid = bin_max;\r\n    while (bin_min < bin_mid) {\r\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\r\n        bin_min = bin_mid;\r\n      } else {\r\n        bin_max = bin_mid;\r\n      }\r\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\r\n    }\r\n    // Use the result from this iteration as the maximum for the next.\r\n    bin_max = bin_mid;\r\n    var start = Math.max(1, loc - bin_mid + 1);\r\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\r\n\r\n    var rd = Array(finish + 2);\r\n    rd[finish + 1] = (1 << d) - 1;\r\n    for (var j = finish; j >= start; j--) {\r\n      // The alphabet (s) is a sparse hash, so the following line generates\r\n      // warnings.\r\n      var charMatch = s[text.charAt(j - 1)];\r\n      if (d === 0) {  // First pass: exact match.\r\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\r\n      } else {  // Subsequent passes: fuzzy match.\r\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\r\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\r\n                last_rd[j + 1];\r\n      }\r\n      if (rd[j] & matchmask) {\r\n        var score = match_bitapScore_(d, j - 1);\r\n        // This match will almost certainly be better than any existing match.\r\n        // But check anyway.\r\n        if (score <= score_threshold) {\r\n          // Told you so.\r\n          score_threshold = score;\r\n          best_loc = j - 1;\r\n          if (best_loc > loc) {\r\n            // When passing loc, don't exceed our current distance from loc.\r\n            start = Math.max(1, 2 * loc - best_loc);\r\n          } else {\r\n            // Already passed loc, downhill from here on in.\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // No hope for a (better) match at greater error levels.\r\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\r\n      break;\r\n    }\r\n    last_rd = rd;\r\n  }\r\n  return best_loc;\r\n};\r\n\r\n\r\n/**\r\n * Initialise the alphabet for the Bitap algorithm.\r\n * @param {string} pattern The text to encode.\r\n * @return {!Object} Hash of character locations.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\r\n  var s = {};\r\n  for (var i = 0; i < pattern.length; i++) {\r\n    s[pattern.charAt(i)] = 0;\r\n  }\r\n  for (var i = 0; i < pattern.length; i++) {\r\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\r\n  }\r\n  return s;\r\n};\r\n\r\n\r\n//  PATCH FUNCTIONS\r\n\r\n\r\n/**\r\n * Increase the context until it is unique,\r\n * but don't let the pattern expand beyond Match_MaxBits.\r\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\r\n * @param {string} text Source text.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\r\n  if (text.length == 0) {\r\n    return;\r\n  }\r\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\r\n  var padding = 0;\r\n\r\n  // Look for the first and last matches of pattern in text.  If two different\r\n  // matches are found, increase the pattern length.\r\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\r\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\r\n         this.Patch_Margin) {\r\n    padding += this.Patch_Margin;\r\n    pattern = text.substring(patch.start2 - padding,\r\n                             patch.start2 + patch.length1 + padding);\r\n  }\r\n  // Add one chunk for good luck.\r\n  padding += this.Patch_Margin;\r\n\r\n  // Add the prefix.\r\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\r\n  if (prefix) {\r\n    patch.diffs.unshift([DIFF_EQUAL, prefix]);\r\n  }\r\n  // Add the suffix.\r\n  var suffix = text.substring(patch.start2 + patch.length1,\r\n                              patch.start2 + patch.length1 + padding);\r\n  if (suffix) {\r\n    patch.diffs.push([DIFF_EQUAL, suffix]);\r\n  }\r\n\r\n  // Roll back the start points.\r\n  patch.start1 -= prefix.length;\r\n  patch.start2 -= prefix.length;\r\n  // Extend the lengths.\r\n  patch.length1 += prefix.length + suffix.length;\r\n  patch.length2 += prefix.length + suffix.length;\r\n};\r\n\r\n\r\n/**\r\n * Compute a list of patches to turn text1 into text2.\r\n * Use diffs if provided, otherwise compute it ourselves.\r\n * There are four ways to call this function, depending on what data is\r\n * available to the caller:\r\n * Method 1:\r\n * a = text1, b = text2\r\n * Method 2:\r\n * a = diffs\r\n * Method 3 (optimal):\r\n * a = text1, b = diffs\r\n * Method 4 (deprecated, use method 3):\r\n * a = text1, b = text2, c = diffs\r\n *\r\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\r\n * Array of diff tuples for text1 to text2 (method 2).\r\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_b text2 (methods 1,4) or\r\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\r\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_c Array of diff tuples\r\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\r\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\r\n */\r\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\r\n  var text1, diffs;\r\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\r\n      typeof opt_c == 'undefined') {\r\n    // Method 1: text1, text2\r\n    // Compute diffs from text1 and text2.\r\n    text1 = /** @type {string} */(a);\r\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\r\n    if (diffs.length > 2) {\r\n      this.diff_cleanupSemantic(diffs);\r\n      this.diff_cleanupEfficiency(diffs);\r\n    }\r\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\r\n      typeof opt_c == 'undefined') {\r\n    // Method 2: diffs\r\n    // Compute text1 from diffs.\r\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\r\n    text1 = this.diff_text1(diffs);\r\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\r\n      typeof opt_c == 'undefined') {\r\n    // Method 3: text1, diffs\r\n    text1 = /** @type {string} */(a);\r\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\r\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\r\n      opt_c && typeof opt_c == 'object') {\r\n    // Method 4: text1, text2, diffs\r\n    // text2 is not used.\r\n    text1 = /** @type {string} */(a);\r\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\r\n  } else {\r\n    throw new Error('Unknown call format to patch_make.');\r\n  }\r\n\r\n  if (diffs.length === 0) {\r\n    return [];  // Get rid of the null case.\r\n  }\r\n  var patches = [];\r\n  var patch = new diff_match_patch.patch_obj();\r\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\r\n  var char_count1 = 0;  // Number of characters into the text1 string.\r\n  var char_count2 = 0;  // Number of characters into the text2 string.\r\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\r\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\r\n  // context info.\r\n  var prepatch_text = text1;\r\n  var postpatch_text = text1;\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    var diff_type = diffs[x][0];\r\n    var diff_text = diffs[x][1];\r\n\r\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\r\n      // A new patch starts here.\r\n      patch.start1 = char_count1;\r\n      patch.start2 = char_count2;\r\n    }\r\n\r\n    switch (diff_type) {\r\n      case DIFF_INSERT:\r\n        patch.diffs[patchDiffLength++] = diffs[x];\r\n        patch.length2 += diff_text.length;\r\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\r\n                         postpatch_text.substring(char_count2);\r\n        break;\r\n      case DIFF_DELETE:\r\n        patch.length1 += diff_text.length;\r\n        patch.diffs[patchDiffLength++] = diffs[x];\r\n        postpatch_text = postpatch_text.substring(0, char_count2) +\r\n                         postpatch_text.substring(char_count2 +\r\n                             diff_text.length);\r\n        break;\r\n      case DIFF_EQUAL:\r\n        if (diff_text.length <= 2 * this.Patch_Margin &&\r\n            patchDiffLength && diffs.length != x + 1) {\r\n          // Small equality inside a patch.\r\n          patch.diffs[patchDiffLength++] = diffs[x];\r\n          patch.length1 += diff_text.length;\r\n          patch.length2 += diff_text.length;\r\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\r\n          // Time for a new patch.\r\n          if (patchDiffLength) {\r\n            this.patch_addContext_(patch, prepatch_text);\r\n            patches.push(patch);\r\n            patch = new diff_match_patch.patch_obj();\r\n            patchDiffLength = 0;\r\n            // Unlike Unidiff, our patch lists have a rolling context.\r\n            // http://code.google.com/p/google-diff-match-patch/wiki/Unidiff\r\n            // Update prepatch text & pos to reflect the application of the\r\n            // just completed patch.\r\n            prepatch_text = postpatch_text;\r\n            char_count1 = char_count2;\r\n          }\r\n        }\r\n        break;\r\n    }\r\n\r\n    // Update the current character count.\r\n    if (diff_type !== DIFF_INSERT) {\r\n      char_count1 += diff_text.length;\r\n    }\r\n    if (diff_type !== DIFF_DELETE) {\r\n      char_count2 += diff_text.length;\r\n    }\r\n  }\r\n  // Pick up the leftover patch if not empty.\r\n  if (patchDiffLength) {\r\n    this.patch_addContext_(patch, prepatch_text);\r\n    patches.push(patch);\r\n  }\r\n\r\n  return patches;\r\n};\r\n\r\n\r\n/**\r\n * Given an array of patches, return another array that is identical.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\r\n */\r\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\r\n  // Making deep copies is hard in JavaScript.\r\n  var patchesCopy = [];\r\n  for (var x = 0; x < patches.length; x++) {\r\n    var patch = patches[x];\r\n    var patchCopy = new diff_match_patch.patch_obj();\r\n    patchCopy.diffs = [];\r\n    for (var y = 0; y < patch.diffs.length; y++) {\r\n      patchCopy.diffs[y] = patch.diffs[y].slice();\r\n    }\r\n    patchCopy.start1 = patch.start1;\r\n    patchCopy.start2 = patch.start2;\r\n    patchCopy.length1 = patch.length1;\r\n    patchCopy.length2 = patch.length2;\r\n    patchesCopy[x] = patchCopy;\r\n  }\r\n  return patchesCopy;\r\n};\r\n\r\n\r\n/**\r\n * Merge a set of patches onto the text.  Return a patched text, as well\r\n * as a list of true/false values indicating which patches were applied.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n * @param {string} text Old text.\r\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\r\n *      new text and an array of boolean values.\r\n */\r\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\r\n  if (patches.length == 0) {\r\n    return [text, []];\r\n  }\r\n\r\n  // Deep copy the patches so that no changes are made to originals.\r\n  patches = this.patch_deepCopy(patches);\r\n\r\n  var nullPadding = this.patch_addPadding(patches);\r\n  text = nullPadding + text + nullPadding;\r\n\r\n  this.patch_splitMax(patches);\r\n  // delta keeps track of the offset between the expected and actual location\r\n  // of the previous patch.  If there are patches expected at positions 10 and\r\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\r\n  // has an effective expected position of 22.\r\n  var delta = 0;\r\n  var results = [];\r\n  for (var x = 0; x < patches.length; x++) {\r\n    var expected_loc = patches[x].start2 + delta;\r\n    var text1 = this.diff_text1(patches[x].diffs);\r\n    var start_loc;\r\n    var end_loc = -1;\r\n    if (text1.length > this.Match_MaxBits) {\r\n      // patch_splitMax will only provide an oversized pattern in the case of\r\n      // a monster delete.\r\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\r\n                                  expected_loc);\r\n      if (start_loc != -1) {\r\n        end_loc = this.match_main(text,\r\n            text1.substring(text1.length - this.Match_MaxBits),\r\n            expected_loc + text1.length - this.Match_MaxBits);\r\n        if (end_loc == -1 || start_loc >= end_loc) {\r\n          // Can't find valid trailing context.  Drop this patch.\r\n          start_loc = -1;\r\n        }\r\n      }\r\n    } else {\r\n      start_loc = this.match_main(text, text1, expected_loc);\r\n    }\r\n    if (start_loc == -1) {\r\n      // No match found.  :(\r\n      results[x] = false;\r\n      // Subtract the delta for this failed patch from subsequent patches.\r\n      delta -= patches[x].length2 - patches[x].length1;\r\n    } else {\r\n      // Found a match.  :)\r\n      results[x] = true;\r\n      delta = start_loc - expected_loc;\r\n      var text2;\r\n      if (end_loc == -1) {\r\n        text2 = text.substring(start_loc, start_loc + text1.length);\r\n      } else {\r\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\r\n      }\r\n      if (text1 == text2) {\r\n        // Perfect match, just shove the replacement text in.\r\n        text = text.substring(0, start_loc) +\r\n               this.diff_text2(patches[x].diffs) +\r\n               text.substring(start_loc + text1.length);\r\n      } else {\r\n        // Imperfect match.  Run a diff to get a framework of equivalent\r\n        // indices.\r\n        var diffs = this.diff_main(text1, text2, false);\r\n        if (text1.length > this.Match_MaxBits &&\r\n            this.diff_levenshtein(diffs) / text1.length >\r\n            this.Patch_DeleteThreshold) {\r\n          // The end points match, but the content is unacceptably bad.\r\n          results[x] = false;\r\n        } else {\r\n          this.diff_cleanupSemanticLossless(diffs);\r\n          var index1 = 0;\r\n          var index2;\r\n          for (var y = 0; y < patches[x].diffs.length; y++) {\r\n            var mod = patches[x].diffs[y];\r\n            if (mod[0] !== DIFF_EQUAL) {\r\n              index2 = this.diff_xIndex(diffs, index1);\r\n            }\r\n            if (mod[0] === DIFF_INSERT) {  // Insertion\r\n              text = text.substring(0, start_loc + index2) + mod[1] +\r\n                     text.substring(start_loc + index2);\r\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\r\n              text = text.substring(0, start_loc + index2) +\r\n                     text.substring(start_loc + this.diff_xIndex(diffs,\r\n                         index1 + mod[1].length));\r\n            }\r\n            if (mod[0] !== DIFF_DELETE) {\r\n              index1 += mod[1].length;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Strip the padding off.\r\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\r\n  return [text, results];\r\n};\r\n\r\n\r\n/**\r\n * Add some padding on text start and end so that edges can match something.\r\n * Intended to be called only from within patch_apply.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n * @return {string} The padding string added to each side.\r\n */\r\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\r\n  var paddingLength = this.Patch_Margin;\r\n  var nullPadding = '';\r\n  for (var x = 1; x <= paddingLength; x++) {\r\n    nullPadding += String.fromCharCode(x);\r\n  }\r\n\r\n  // Bump all the patches forward.\r\n  for (var x = 0; x < patches.length; x++) {\r\n    patches[x].start1 += paddingLength;\r\n    patches[x].start2 += paddingLength;\r\n  }\r\n\r\n  // Add some padding on start of first diff.\r\n  var patch = patches[0];\r\n  var diffs = patch.diffs;\r\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\r\n    // Add nullPadding equality.\r\n    diffs.unshift([DIFF_EQUAL, nullPadding]);\r\n    patch.start1 -= paddingLength;  // Should be 0.\r\n    patch.start2 -= paddingLength;  // Should be 0.\r\n    patch.length1 += paddingLength;\r\n    patch.length2 += paddingLength;\r\n  } else if (paddingLength > diffs[0][1].length) {\r\n    // Grow first equality.\r\n    var extraLength = paddingLength - diffs[0][1].length;\r\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\r\n    patch.start1 -= extraLength;\r\n    patch.start2 -= extraLength;\r\n    patch.length1 += extraLength;\r\n    patch.length2 += extraLength;\r\n  }\r\n\r\n  // Add some padding on end of last diff.\r\n  patch = patches[patches.length - 1];\r\n  diffs = patch.diffs;\r\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\r\n    // Add nullPadding equality.\r\n    diffs.push([DIFF_EQUAL, nullPadding]);\r\n    patch.length1 += paddingLength;\r\n    patch.length2 += paddingLength;\r\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\r\n    // Grow last equality.\r\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\r\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\r\n    patch.length1 += extraLength;\r\n    patch.length2 += extraLength;\r\n  }\r\n\r\n  return nullPadding;\r\n};\r\n\r\n\r\n/**\r\n * Look through the patches and break up any which are longer than the maximum\r\n * limit of the match algorithm.\r\n * Intended to be called only from within patch_apply.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n */\r\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\r\n  var patch_size = this.Match_MaxBits;\r\n  for (var x = 0; x < patches.length; x++) {\r\n    if (patches[x].length1 <= patch_size) {\r\n      continue;\r\n    }\r\n    var bigpatch = patches[x];\r\n    // Remove the big old patch.\r\n    patches.splice(x--, 1);\r\n    var start1 = bigpatch.start1;\r\n    var start2 = bigpatch.start2;\r\n    var precontext = '';\r\n    while (bigpatch.diffs.length !== 0) {\r\n      // Create one of several smaller patches.\r\n      var patch = new diff_match_patch.patch_obj();\r\n      var empty = true;\r\n      patch.start1 = start1 - precontext.length;\r\n      patch.start2 = start2 - precontext.length;\r\n      if (precontext !== '') {\r\n        patch.length1 = patch.length2 = precontext.length;\r\n        patch.diffs.push([DIFF_EQUAL, precontext]);\r\n      }\r\n      while (bigpatch.diffs.length !== 0 &&\r\n             patch.length1 < patch_size - this.Patch_Margin) {\r\n        var diff_type = bigpatch.diffs[0][0];\r\n        var diff_text = bigpatch.diffs[0][1];\r\n        if (diff_type === DIFF_INSERT) {\r\n          // Insertions are harmless.\r\n          patch.length2 += diff_text.length;\r\n          start2 += diff_text.length;\r\n          patch.diffs.push(bigpatch.diffs.shift());\r\n          empty = false;\r\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\r\n                   patch.diffs[0][0] == DIFF_EQUAL &&\r\n                   diff_text.length > 2 * patch_size) {\r\n          // This is a large deletion.  Let it pass in one chunk.\r\n          patch.length1 += diff_text.length;\r\n          start1 += diff_text.length;\r\n          empty = false;\r\n          patch.diffs.push([diff_type, diff_text]);\r\n          bigpatch.diffs.shift();\r\n        } else {\r\n          // Deletion or equality.  Only take as much as we can stomach.\r\n          diff_text = diff_text.substring(0,\r\n              patch_size - patch.length1 - this.Patch_Margin);\r\n          patch.length1 += diff_text.length;\r\n          start1 += diff_text.length;\r\n          if (diff_type === DIFF_EQUAL) {\r\n            patch.length2 += diff_text.length;\r\n            start2 += diff_text.length;\r\n          } else {\r\n            empty = false;\r\n          }\r\n          patch.diffs.push([diff_type, diff_text]);\r\n          if (diff_text == bigpatch.diffs[0][1]) {\r\n            bigpatch.diffs.shift();\r\n          } else {\r\n            bigpatch.diffs[0][1] =\r\n                bigpatch.diffs[0][1].substring(diff_text.length);\r\n          }\r\n        }\r\n      }\r\n      // Compute the head context for the next patch.\r\n      precontext = this.diff_text2(patch.diffs);\r\n      precontext =\r\n          precontext.substring(precontext.length - this.Patch_Margin);\r\n      // Append the end context for this patch.\r\n      var postcontext = this.diff_text1(bigpatch.diffs)\r\n                            .substring(0, this.Patch_Margin);\r\n      if (postcontext !== '') {\r\n        patch.length1 += postcontext.length;\r\n        patch.length2 += postcontext.length;\r\n        if (patch.diffs.length !== 0 &&\r\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\r\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\r\n        } else {\r\n          patch.diffs.push([DIFF_EQUAL, postcontext]);\r\n        }\r\n      }\r\n      if (!empty) {\r\n        patches.splice(++x, 0, patch);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Take a list of patches and return a textual representation.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n * @return {string} Text representation of patches.\r\n */\r\ndiff_match_patch.prototype.patch_toText = function(patches) {\r\n  var text = [];\r\n  for (var x = 0; x < patches.length; x++) {\r\n    text[x] = patches[x];\r\n  }\r\n  return text.join('');\r\n};\r\n\r\n\r\n/**\r\n * Parse a textual representation of patches and return a list of Patch objects.\r\n * @param {string} textline Text representation of patches.\r\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\r\n * @throws {!Error} If invalid input.\r\n */\r\ndiff_match_patch.prototype.patch_fromText = function(textline) {\r\n  var patches = [];\r\n  if (!textline) {\r\n    return patches;\r\n  }\r\n  var text = textline.split('\\n');\r\n  var textPointer = 0;\r\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\r\n  while (textPointer < text.length) {\r\n    var m = text[textPointer].match(patchHeader);\r\n    if (!m) {\r\n      throw new Error('Invalid patch string: ' + text[textPointer]);\r\n    }\r\n    var patch = new diff_match_patch.patch_obj();\r\n    patches.push(patch);\r\n    patch.start1 = parseInt(m[1], 10);\r\n    if (m[2] === '') {\r\n      patch.start1--;\r\n      patch.length1 = 1;\r\n    } else if (m[2] == '0') {\r\n      patch.length1 = 0;\r\n    } else {\r\n      patch.start1--;\r\n      patch.length1 = parseInt(m[2], 10);\r\n    }\r\n\r\n    patch.start2 = parseInt(m[3], 10);\r\n    if (m[4] === '') {\r\n      patch.start2--;\r\n      patch.length2 = 1;\r\n    } else if (m[4] == '0') {\r\n      patch.length2 = 0;\r\n    } else {\r\n      patch.start2--;\r\n      patch.length2 = parseInt(m[4], 10);\r\n    }\r\n    textPointer++;\r\n\r\n    while (textPointer < text.length) {\r\n      var sign = text[textPointer].charAt(0);\r\n      try {\r\n        var line = decodeURI(text[textPointer].substring(1));\r\n      } catch (ex) {\r\n        // Malformed URI sequence.\r\n        throw new Error('Illegal escape in patch_fromText: ' + line);\r\n      }\r\n      if (sign == '-') {\r\n        // Deletion.\r\n        patch.diffs.push([DIFF_DELETE, line]);\r\n      } else if (sign == '+') {\r\n        // Insertion.\r\n        patch.diffs.push([DIFF_INSERT, line]);\r\n      } else if (sign == ' ') {\r\n        // Minor equality.\r\n        patch.diffs.push([DIFF_EQUAL, line]);\r\n      } else if (sign == '@') {\r\n        // Start of next patch.\r\n        break;\r\n      } else if (sign === '') {\r\n        // Blank line?  Whatever.\r\n      } else {\r\n        // WTF?\r\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\r\n      }\r\n      textPointer++;\r\n    }\r\n  }\r\n  return patches;\r\n};\r\n\r\n\r\n/**\r\n * Class representing one patch operation.\r\n * @constructor\r\n */\r\ndiff_match_patch.patch_obj = function() {\r\n  /** @type {!Array.<!diff_match_patch.Diff>} */\r\n  this.diffs = [];\r\n  /** @type {?number} */\r\n  this.start1 = null;\r\n  /** @type {?number} */\r\n  this.start2 = null;\r\n  /** @type {number} */\r\n  this.length1 = 0;\r\n  /** @type {number} */\r\n  this.length2 = 0;\r\n};\r\n\r\n\r\n/**\r\n * Emmulate GNU diff's format.\r\n * Header: @@ -382,8 +481,9 @@\r\n * Indicies are printed as 1-based, not 0-based.\r\n * @return {string} The GNU diff string.\r\n */\r\ndiff_match_patch.patch_obj.prototype.toString = function() {\r\n  var coords1, coords2;\r\n  if (this.length1 === 0) {\r\n    coords1 = this.start1 + ',0';\r\n  } else if (this.length1 == 1) {\r\n    coords1 = this.start1 + 1;\r\n  } else {\r\n    coords1 = (this.start1 + 1) + ',' + this.length1;\r\n  }\r\n  if (this.length2 === 0) {\r\n    coords2 = this.start2 + ',0';\r\n  } else if (this.length2 == 1) {\r\n    coords2 = this.start2 + 1;\r\n  } else {\r\n    coords2 = (this.start2 + 1) + ',' + this.length2;\r\n  }\r\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\r\n  var op;\r\n  // Escape the body of the patch with %xx notation.\r\n  for (var x = 0; x < this.diffs.length; x++) {\r\n    switch (this.diffs[x][0]) {\r\n      case DIFF_INSERT:\r\n        op = '+';\r\n        break;\r\n      case DIFF_DELETE:\r\n        op = '-';\r\n        break;\r\n      case DIFF_EQUAL:\r\n        op = ' ';\r\n        break;\r\n    }\r\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\r\n  }\r\n  return text.join('').replace(/%20/g, ' ');\r\n};\r\n\r\n\r\n// The following export code was added by @ForbesLindesay\r\nmodule.exports = diff_match_patch;\r\nmodule.exports['diff_match_patch'] = diff_match_patch;\r\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\r\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\r\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;\n});\n\n/* global diff_match_patch */\nvar TEXT_DIFF = 2;\nvar DEFAULT_MIN_LENGTH = 60;\nvar cachedDiffPatch = null;\n\nvar getDiffMatchPatch = function getDiffMatchPatch(required) {\n  /* jshint camelcase: false */\n\n  if (!cachedDiffPatch) {\n    var instance = void 0;\n    /* eslint-disable camelcase, new-cap */\n    if (typeof diff_match_patch !== 'undefined') {\n      // already loaded, probably a browser\n      instance = typeof diff_match_patch === 'function' ? new diff_match_patch() : new diff_match_patch.diff_match_patch();\n    } else if (diffMatchPatch) {\n      try {\n        instance = diffMatchPatch && new diffMatchPatch();\n      } catch (err) {\n        instance = null;\n      }\n    }\n    /* eslint-enable camelcase, new-cap */\n    if (!instance) {\n      if (!required) {\n        return null;\n      }\n      var error = new Error('text diff_match_patch library not found');\n      // eslint-disable-next-line camelcase\n      error.diff_match_patch_not_found = true;\n      throw error;\n    }\n    cachedDiffPatch = {\n      diff: function diff(txt1, txt2) {\n        return instance.patch_toText(instance.patch_make(txt1, txt2));\n      },\n      patch: function patch(txt1, _patch) {\n        var results = instance.patch_apply(instance.patch_fromText(_patch), txt1);\n        for (var i = 0; i < results[1].length; i++) {\n          if (!results[1][i]) {\n            var _error = new Error('text patch failed');\n            _error.textPatchFailed = true;\n          }\n        }\n        return results[0];\n      }\n    };\n  }\n  return cachedDiffPatch;\n};\n\nvar diffFilter$3 = function textsDiffFilter(context) {\n  if (context.leftType !== 'string') {\n    return;\n  }\n  var minLength = context.options && context.options.textDiff && context.options.textDiff.minLength || DEFAULT_MIN_LENGTH;\n  if (context.left.length < minLength || context.right.length < minLength) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  // large text, try to use a text-diff algorithm\n  var diffMatchPatch$$1 = getDiffMatchPatch();\n  if (!diffMatchPatch$$1) {\n    // diff-match-patch library not available,\n    // fallback to regular string replace\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  var diff = diffMatchPatch$$1.diff;\n  context.setResult([diff(context.left, context.right), 0, TEXT_DIFF]).exit();\n};\ndiffFilter$3.filterName = 'texts';\n\nvar patchFilter$3 = function textsPatchFilter(context) {\n  if (context.nested) {\n    return;\n  }\n  if (context.delta[2] !== TEXT_DIFF) {\n    return;\n  }\n\n  // text-diff, use a text-patch algorithm\n  var patch = getDiffMatchPatch(true).patch;\n  context.setResult(patch(context.left, context.delta[0])).exit();\n};\npatchFilter$3.filterName = 'texts';\n\nvar textDeltaReverse = function textDeltaReverse(delta) {\n  var i = void 0;\n  var l = void 0;\n  var lines = void 0;\n  var line = void 0;\n  var lineTmp = void 0;\n  var header = null;\n  var headerRegex = /^@@ +-(\\d+),(\\d+) +\\+(\\d+),(\\d+) +@@$/;\n  var lineHeader = void 0;\n  lines = delta.split('\\n');\n  for (i = 0, l = lines.length; i < l; i++) {\n    line = lines[i];\n    var lineStart = line.slice(0, 1);\n    if (lineStart === '@') {\n      header = headerRegex.exec(line);\n      lineHeader = i;\n\n      // fix header\n      lines[lineHeader] = '@@ -' + header[3] + ',' + header[4] + ' +' + header[1] + ',' + header[2] + ' @@';\n    } else if (lineStart === '+') {\n      lines[i] = '-' + lines[i].slice(1);\n      if (lines[i - 1].slice(0, 1) === '+') {\n        // swap lines to keep default order (-+)\n        lineTmp = lines[i];\n        lines[i] = lines[i - 1];\n        lines[i - 1] = lineTmp;\n      }\n    } else if (lineStart === '-') {\n      lines[i] = '+' + lines[i].slice(1);\n    }\n  }\n  return lines.join('\\n');\n};\n\nvar reverseFilter$3 = function textsReverseFilter(context) {\n  if (context.nested) {\n    return;\n  }\n  if (context.delta[2] !== TEXT_DIFF) {\n    return;\n  }\n\n  // text-diff, use a text-diff algorithm\n  context.setResult([textDeltaReverse(context.delta[0]), 0, TEXT_DIFF]).exit();\n};\nreverseFilter$3.filterName = 'texts';\n\nvar DiffPatcher = function () {\n  function DiffPatcher(options) {\n    classCallCheck(this, DiffPatcher);\n\n    this.processor = new Processor(options);\n    this.processor.pipe(new Pipe('diff').append(collectChildrenDiffFilter, diffFilter, diffFilter$2, diffFilter$3, objectsDiffFilter, diffFilter$1).shouldHaveResult());\n    this.processor.pipe(new Pipe('patch').append(collectChildrenPatchFilter, collectChildrenPatchFilter$1, patchFilter, patchFilter$3, patchFilter$1, patchFilter$2).shouldHaveResult());\n    this.processor.pipe(new Pipe('reverse').append(collectChildrenReverseFilter, collectChildrenReverseFilter$1, reverseFilter, reverseFilter$3, reverseFilter$1, reverseFilter$2).shouldHaveResult());\n  }\n\n  createClass(DiffPatcher, [{\n    key: 'options',\n    value: function options() {\n      var _processor;\n\n      return (_processor = this.processor).options.apply(_processor, arguments);\n    }\n  }, {\n    key: 'diff',\n    value: function diff(left, right) {\n      return this.processor.process(new DiffContext(left, right));\n    }\n  }, {\n    key: 'patch',\n    value: function patch(left, delta) {\n      return this.processor.process(new PatchContext(left, delta));\n    }\n  }, {\n    key: 'reverse',\n    value: function reverse(delta) {\n      return this.processor.process(new ReverseContext(delta));\n    }\n  }, {\n    key: 'unpatch',\n    value: function unpatch(right, delta) {\n      return this.patch(right, this.reverse(delta));\n    }\n  }, {\n    key: 'clone',\n    value: function clone$$1(value) {\n      return clone(value);\n    }\n  }]);\n  return DiffPatcher;\n}();\n\nvar isArray$3 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nvar getObjectKeys = typeof Object.keys === 'function' ? function (obj) {\n  return Object.keys(obj);\n} : function (obj) {\n  var names = [];\n  for (var property in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, property)) {\n      names.push(property);\n    }\n  }\n  return names;\n};\n\nvar trimUnderscore = function trimUnderscore(str) {\n  if (str.substr(0, 1) === '_') {\n    return str.slice(1);\n  }\n  return str;\n};\n\nvar arrayKeyToSortNumber = function arrayKeyToSortNumber(key) {\n  if (key === '_t') {\n    return -1;\n  } else {\n    if (key.substr(0, 1) === '_') {\n      return parseInt(key.slice(1), 10);\n    } else {\n      return parseInt(key, 10) + 0.1;\n    }\n  }\n};\n\nvar arrayKeyComparer = function arrayKeyComparer(key1, key2) {\n  return arrayKeyToSortNumber(key1) - arrayKeyToSortNumber(key2);\n};\n\nvar BaseFormatter = function () {\n  function BaseFormatter() {\n    classCallCheck(this, BaseFormatter);\n  }\n\n  createClass(BaseFormatter, [{\n    key: 'format',\n    value: function format(delta, left) {\n      var context = {};\n      this.prepareContext(context);\n      this.recurse(context, delta, left);\n      return this.finalize(context);\n    }\n  }, {\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      context.buffer = [];\n      context.out = function () {\n        var _buffer;\n\n        (_buffer = this.buffer).push.apply(_buffer, arguments);\n      };\n    }\n  }, {\n    key: 'typeFormattterNotFound',\n    value: function typeFormattterNotFound(context, deltaType) {\n      throw new Error('cannot format delta type: ' + deltaType);\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      return err.toString();\n    }\n  }, {\n    key: 'finalize',\n    value: function finalize(_ref) {\n      var buffer = _ref.buffer;\n\n      if (isArray$3(buffer)) {\n        return buffer.join('');\n      }\n    }\n  }, {\n    key: 'recurse',\n    value: function recurse(context, delta, left, key, leftKey, movedFrom, isLast) {\n      var useMoveOriginHere = delta && movedFrom;\n      var leftValue = useMoveOriginHere ? movedFrom.value : left;\n\n      if (typeof delta === 'undefined' && typeof key === 'undefined') {\n        return undefined;\n      }\n\n      var type = this.getDeltaType(delta, movedFrom);\n      var nodeType = type === 'node' ? delta._t === 'a' ? 'array' : 'object' : '';\n\n      if (typeof key !== 'undefined') {\n        this.nodeBegin(context, key, leftKey, type, nodeType, isLast);\n      } else {\n        this.rootBegin(context, type, nodeType);\n      }\n\n      var typeFormattter = void 0;\n      try {\n        typeFormattter = this['format_' + type] || this.typeFormattterNotFound(context, type);\n        typeFormattter.call(this, context, delta, leftValue, key, leftKey, movedFrom);\n      } catch (err) {\n        this.typeFormattterErrorFormatter(context, err, delta, leftValue, key, leftKey, movedFrom);\n        if (typeof console !== 'undefined' && console.error) {\n          console.error(err.stack);\n        }\n      }\n\n      if (typeof key !== 'undefined') {\n        this.nodeEnd(context, key, leftKey, type, nodeType, isLast);\n      } else {\n        this.rootEnd(context, type, nodeType);\n      }\n    }\n  }, {\n    key: 'formatDeltaChildren',\n    value: function formatDeltaChildren(context, delta, left) {\n      var self = this;\n      this.forEachDeltaKey(delta, left, function (key, leftKey, movedFrom, isLast) {\n        self.recurse(context, delta[key], left ? left[leftKey] : undefined, key, leftKey, movedFrom, isLast);\n      });\n    }\n  }, {\n    key: 'forEachDeltaKey',\n    value: function forEachDeltaKey(delta, left, fn) {\n      var keys = getObjectKeys(delta);\n      var arrayKeys = delta._t === 'a';\n      var moveDestinations = {};\n      var name = void 0;\n      if (typeof left !== 'undefined') {\n        for (name in left) {\n          if (Object.prototype.hasOwnProperty.call(left, name)) {\n            if (typeof delta[name] === 'undefined' && (!arrayKeys || typeof delta['_' + name] === 'undefined')) {\n              keys.push(name);\n            }\n          }\n        }\n      }\n      // look for move destinations\n      for (name in delta) {\n        if (Object.prototype.hasOwnProperty.call(delta, name)) {\n          var value = delta[name];\n          if (isArray$3(value) && value[2] === 3) {\n            moveDestinations[value[1].toString()] = {\n              key: name,\n              value: left && left[parseInt(name.substr(1))]\n            };\n            if (this.includeMoveDestinations !== false) {\n              if (typeof left === 'undefined' && typeof delta[value[1]] === 'undefined') {\n                keys.push(value[1].toString());\n              }\n            }\n          }\n        }\n      }\n      if (arrayKeys) {\n        keys.sort(arrayKeyComparer);\n      } else {\n        keys.sort();\n      }\n      for (var index = 0, length = keys.length; index < length; index++) {\n        var key = keys[index];\n        if (arrayKeys && key === '_t') {\n          continue;\n        }\n        var leftKey = arrayKeys ? typeof key === 'number' ? key : parseInt(trimUnderscore(key), 10) : key;\n        var isLast = index === length - 1;\n        fn(key, leftKey, moveDestinations[leftKey], isLast);\n      }\n    }\n  }, {\n    key: 'getDeltaType',\n    value: function getDeltaType(delta, movedFrom) {\n      if (typeof delta === 'undefined') {\n        if (typeof movedFrom !== 'undefined') {\n          return 'movedestination';\n        }\n        return 'unchanged';\n      }\n      if (isArray$3(delta)) {\n        if (delta.length === 1) {\n          return 'added';\n        }\n        if (delta.length === 2) {\n          return 'modified';\n        }\n        if (delta.length === 3 && delta[2] === 0) {\n          return 'deleted';\n        }\n        if (delta.length === 3 && delta[2] === 2) {\n          return 'textdiff';\n        }\n        if (delta.length === 3 && delta[2] === 3) {\n          return 'moved';\n        }\n      } else if ((typeof delta === 'undefined' ? 'undefined' : _typeof(delta)) === 'object') {\n        return 'node';\n      }\n      return 'unknown';\n    }\n  }, {\n    key: 'parseTextDiff',\n    value: function parseTextDiff(value) {\n      var output = [];\n      var lines = value.split('\\n@@ ');\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        var lineOutput = {\n          pieces: []\n        };\n        var location = /^(?:@@ )?[-+]?(\\d+),(\\d+)/.exec(line).slice(1);\n        lineOutput.location = {\n          line: location[0],\n          chr: location[1]\n        };\n        var pieces = line.split('\\n').slice(1);\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          var piece = pieces[pieceIndex];\n          if (!piece.length) {\n            continue;\n          }\n          var pieceOutput = {\n            type: 'context'\n          };\n          if (piece.substr(0, 1) === '+') {\n            pieceOutput.type = 'added';\n          } else if (piece.substr(0, 1) === '-') {\n            pieceOutput.type = 'deleted';\n          }\n          pieceOutput.text = piece.slice(1);\n          lineOutput.pieces.push(pieceOutput);\n        }\n        output.push(lineOutput);\n      }\n      return output;\n    }\n  }]);\n  return BaseFormatter;\n}();\n\n\n\nvar base = Object.freeze({\n\tdefault: BaseFormatter\n});\n\nvar HtmlFormatter = function (_BaseFormatter) {\n  inherits(HtmlFormatter, _BaseFormatter);\n\n  function HtmlFormatter() {\n    classCallCheck(this, HtmlFormatter);\n    return possibleConstructorReturn(this, (HtmlFormatter.__proto__ || Object.getPrototypeOf(HtmlFormatter)).apply(this, arguments));\n  }\n\n  createClass(HtmlFormatter, [{\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.out('<pre class=\"jsondiffpatch-error\">' + err + '</pre>');\n    }\n  }, {\n    key: 'formatValue',\n    value: function formatValue(context, value) {\n      context.out('<pre>' + htmlEscape(JSON.stringify(value, null, 2)) + '</pre>');\n    }\n  }, {\n    key: 'formatTextDiffString',\n    value: function formatTextDiffString(context, value) {\n      var lines = this.parseTextDiff(value);\n      context.out('<ul class=\"jsondiffpatch-textdiff\">');\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        context.out('<li><div class=\"jsondiffpatch-textdiff-location\">' + ('<span class=\"jsondiffpatch-textdiff-line-number\">' + line.location.line + '</span><span class=\"jsondiffpatch-textdiff-char\">' + line.location.chr + '</span></div><div class=\"jsondiffpatch-textdiff-line\">'));\n        var pieces = line.pieces;\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          /* global decodeURI */\n          var piece = pieces[pieceIndex];\n          context.out('<span class=\"jsondiffpatch-textdiff-' + piece.type + '\">' + htmlEscape(decodeURI(piece.text)) + '</span>');\n        }\n        context.out('</div></li>');\n      }\n      context.out('</ul>');\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin(context, type, nodeType) {\n      var nodeClass = 'jsondiffpatch-' + type + (nodeType ? ' jsondiffpatch-child-node-type-' + nodeType : '');\n      context.out('<div class=\"jsondiffpatch-delta ' + nodeClass + '\">');\n    }\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd(context) {\n      context.out('</div>' + (context.hasArrows ? '<script type=\"text/javascript\">setTimeout(' + (adjustArrows.toString() + ',10);</script>') : ''));\n    }\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(context, key, leftKey, type, nodeType) {\n      var nodeClass = 'jsondiffpatch-' + type + (nodeType ? ' jsondiffpatch-child-node-type-' + nodeType : '');\n      context.out('<li class=\"' + nodeClass + '\" data-key=\"' + leftKey + '\">' + ('<div class=\"jsondiffpatch-property-name\">' + leftKey + '</div>'));\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(context) {\n      context.out('</li>');\n    }\n\n    /* jshint camelcase: false */\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, left);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, left);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      // recurse\n      var nodeType = delta._t === 'a' ? 'array' : 'object';\n      context.out('<ul class=\"jsondiffpatch-node jsondiffpatch-node-type-' + nodeType + '\">');\n      this.formatDeltaChildren(context, delta, left);\n      context.out('</ul>');\n    }\n  }, {\n    key: 'format_added',\n    value: function format_added(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_modified',\n    value: function format_modified(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value jsondiffpatch-left-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div>' + '<div class=\"jsondiffpatch-value jsondiffpatch-right-value\">');\n      this.formatValue(context, delta[1]);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_deleted',\n    value: function format_deleted(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_moved',\n    value: function format_moved(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div><div class=\"jsondiffpatch-moved-destination\">' + delta[1] + '</div>');\n\n      // draw an SVG arrow from here to move destination\n      context.out(\n      /* jshint multistr: true */\n      '<div class=\"jsondiffpatch-arrow\" ' + 'style=\"position: relative; left: -34px;\">\\n          <svg width=\"30\" height=\"60\" ' + 'style=\"position: absolute; display: none;\">\\n          <defs>\\n              <marker id=\"markerArrow\" markerWidth=\"8\" markerHeight=\"8\"\\n                 refx=\"2\" refy=\"4\"\\n                     orient=\"auto\" markerUnits=\"userSpaceOnUse\">\\n                  <path d=\"M1,1 L1,7 L7,4 L1,1\" style=\"fill: #339;\" />\\n              </marker>\\n          </defs>\\n          <path d=\"M30,0 Q-10,25 26,50\"\\n            style=\"stroke: #88f; stroke-width: 2px; fill: none; ' + 'stroke-opacity: 0.5; marker-end: url(#markerArrow);\"\\n          ></path>\\n          </svg>\\n      </div>');\n      context.hasArrows = true;\n    }\n  }, {\n    key: 'format_textdiff',\n    value: function format_textdiff(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatTextDiffString(context, delta[0]);\n      context.out('</div>');\n    }\n  }]);\n  return HtmlFormatter;\n}(BaseFormatter);\n\nfunction htmlEscape(text) {\n  var html = text;\n  var replacements = [[/&/g, '&amp;'], [/</g, '&lt;'], [/>/g, '&gt;'], [/'/g, '&apos;'], [/\"/g, '&quot;']];\n  for (var i = 0; i < replacements.length; i++) {\n    html = html.replace(replacements[i][0], replacements[i][1]);\n  }\n  return html;\n}\n\nvar adjustArrows = function jsondiffpatchHtmlFormatterAdjustArrows(nodeArg) {\n  var node = nodeArg || document;\n  var getElementText = function getElementText(_ref) {\n    var textContent = _ref.textContent,\n        innerText = _ref.innerText;\n    return textContent || innerText;\n  };\n  var eachByQuery = function eachByQuery(el, query, fn) {\n    var elems = el.querySelectorAll(query);\n    for (var i = 0, l = elems.length; i < l; i++) {\n      fn(elems[i]);\n    }\n  };\n  var eachChildren = function eachChildren(_ref2, fn) {\n    var children = _ref2.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      fn(children[i], i);\n    }\n  };\n  eachByQuery(node, '.jsondiffpatch-arrow', function (_ref3) {\n    var parentNode = _ref3.parentNode,\n        children = _ref3.children,\n        style = _ref3.style;\n\n    var arrowParent = parentNode;\n    var svg = children[0];\n    var path = svg.children[1];\n    svg.style.display = 'none';\n    var destination = getElementText(arrowParent.querySelector('.jsondiffpatch-moved-destination'));\n    var container = arrowParent.parentNode;\n    var destinationElem = void 0;\n    eachChildren(container, function (child) {\n      if (child.getAttribute('data-key') === destination) {\n        destinationElem = child;\n      }\n    });\n    if (!destinationElem) {\n      return;\n    }\n    try {\n      var distance = destinationElem.offsetTop - arrowParent.offsetTop;\n      svg.setAttribute('height', Math.abs(distance) + 6);\n      style.top = -8 + (distance > 0 ? 0 : distance) + 'px';\n      var curve = distance > 0 ? 'M30,0 Q-10,' + Math.round(distance / 2) + ' 26,' + (distance - 4) : 'M30,' + -distance + ' Q-10,' + Math.round(-distance / 2) + ' 26,4';\n      path.setAttribute('d', curve);\n      svg.style.display = '';\n    } catch (err) {}\n  });\n};\n\n/* jshint camelcase: true */\n/* eslint-enable camelcase */\n\nvar showUnchanged = function showUnchanged(show, node, delay) {\n  var el = node || document.body;\n  var prefix = 'jsondiffpatch-unchanged-';\n  var classes = {\n    showing: prefix + 'showing',\n    hiding: prefix + 'hiding',\n    visible: prefix + 'visible',\n    hidden: prefix + 'hidden'\n  };\n  var list = el.classList;\n  if (!list) {\n    return;\n  }\n  if (!delay) {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    list.remove(classes.visible);\n    list.remove(classes.hidden);\n    if (show === false) {\n      list.add(classes.hidden);\n    }\n    return;\n  }\n  if (show === false) {\n    list.remove(classes.showing);\n    list.add(classes.visible);\n    setTimeout(function () {\n      list.add(classes.hiding);\n    }, 10);\n  } else {\n    list.remove(classes.hiding);\n    list.add(classes.showing);\n    list.remove(classes.hidden);\n  }\n  var intervalId = setInterval(function () {\n    adjustArrows(el);\n  }, 100);\n  setTimeout(function () {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    if (show === false) {\n      list.add(classes.hidden);\n      list.remove(classes.visible);\n    } else {\n      list.add(classes.visible);\n      list.remove(classes.hidden);\n    }\n    setTimeout(function () {\n      list.remove(classes.visible);\n      clearInterval(intervalId);\n    }, delay + 400);\n  }, delay);\n};\n\nvar hideUnchanged = function hideUnchanged(node, delay) {\n  return showUnchanged(false, node, delay);\n};\n\nvar defaultInstance = void 0;\n\nfunction format(delta, left) {\n  if (!defaultInstance) {\n    defaultInstance = new HtmlFormatter();\n  }\n  return defaultInstance.format(delta, left);\n}\n\n\n\nvar html = Object.freeze({\n\tshowUnchanged: showUnchanged,\n\thideUnchanged: hideUnchanged,\n\tdefault: HtmlFormatter,\n\tformat: format\n});\n\nvar AnnotatedFormatter = function (_BaseFormatter) {\n  inherits(AnnotatedFormatter, _BaseFormatter);\n\n  function AnnotatedFormatter() {\n    classCallCheck(this, AnnotatedFormatter);\n\n    var _this = possibleConstructorReturn(this, (AnnotatedFormatter.__proto__ || Object.getPrototypeOf(AnnotatedFormatter)).call(this));\n\n    _this.includeMoveDestinations = false;\n    return _this;\n  }\n\n  createClass(AnnotatedFormatter, [{\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      get(AnnotatedFormatter.prototype.__proto__ || Object.getPrototypeOf(AnnotatedFormatter.prototype), 'prepareContext', this).call(this, context);\n      context.indent = function (levels) {\n        this.indentLevel = (this.indentLevel || 0) + (typeof levels === 'undefined' ? 1 : levels);\n        this.indentPad = new Array(this.indentLevel + 1).join('&nbsp;&nbsp;');\n      };\n      context.row = function (json, htmlNote) {\n        context.out('<tr><td style=\"white-space: nowrap;\">' + '<pre class=\"jsondiffpatch-annotated-indent\"' + ' style=\"display: inline-block\">');\n        context.out(context.indentPad);\n        context.out('</pre><pre style=\"display: inline-block\">');\n        context.out(json);\n        context.out('</pre></td><td class=\"jsondiffpatch-delta-note\"><div>');\n        context.out(htmlNote);\n        context.out('</div></td></tr>');\n      };\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.row('', '<pre class=\"jsondiffpatch-error\">' + err + '</pre>');\n    }\n  }, {\n    key: 'formatTextDiffString',\n    value: function formatTextDiffString(context, value) {\n      var lines = this.parseTextDiff(value);\n      context.out('<ul class=\"jsondiffpatch-textdiff\">');\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        context.out('<li><div class=\"jsondiffpatch-textdiff-location\">' + ('<span class=\"jsondiffpatch-textdiff-line-number\">' + line.location.line + '</span><span class=\"jsondiffpatch-textdiff-char\">' + line.location.chr + '</span></div><div class=\"jsondiffpatch-textdiff-line\">'));\n        var pieces = line.pieces;\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          var piece = pieces[pieceIndex];\n          context.out('<span class=\"jsondiffpatch-textdiff-' + piece.type + '\">' + piece.text + '</span>');\n        }\n        context.out('</div></li>');\n      }\n      context.out('</ul>');\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin(context, type, nodeType) {\n      context.out('<table class=\"jsondiffpatch-annotated-delta\">');\n      if (type === 'node') {\n        context.row('{');\n        context.indent();\n      }\n      if (nodeType === 'array') {\n        context.row('\"_t\": \"a\",', 'Array delta (member names indicate array indices)');\n      }\n    }\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd(context, type) {\n      if (type === 'node') {\n        context.indent(-1);\n        context.row('}');\n      }\n      context.out('</table>');\n    }\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(context, key, leftKey, type, nodeType) {\n      context.row('&quot;' + key + '&quot;: {');\n      if (type === 'node') {\n        context.indent();\n      }\n      if (nodeType === 'array') {\n        context.row('\"_t\": \"a\",', 'Array delta (member names indicate array indices)');\n      }\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(context, key, leftKey, type, nodeType, isLast) {\n      if (type === 'node') {\n        context.indent(-1);\n      }\n      context.row('}' + (isLast ? '' : ','));\n    }\n\n    /* jshint camelcase: false */\n\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged() {}\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination() {}\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      // recurse\n      this.formatDeltaChildren(context, delta, left);\n    }\n  }]);\n  return AnnotatedFormatter;\n}(BaseFormatter);\n\n/* eslint-enable camelcase */\n\nvar wrapPropertyName = function wrapPropertyName(name) {\n  return '<pre style=\"display:inline-block\">&quot;' + name + '&quot;</pre>';\n};\n\nvar deltaAnnotations = {\n  added: function added(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([newValue])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'new value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'insert at index ' + leftKey + formatLegend;\n    }\n    return 'add property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  modified: function modified(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([previousValue, newValue])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'modify value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'modify at index ' + leftKey + formatLegend;\n    }\n    return 'modify property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  deleted: function deleted(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([previousValue, 0, 0])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'delete value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'remove index ' + leftKey + formatLegend;\n    }\n    return 'delete property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  moved: function moved(delta, left, key, leftKey) {\n    return 'move from <span title=\"(position to remove at original state)\">' + ('index ' + leftKey + '</span> to <span title=\"(position to insert at final') + (' state)\">index ' + delta[1] + '</span>');\n  },\n  textdiff: function textdiff(delta, left, key, leftKey) {\n    var location = typeof leftKey === 'undefined' ? '' : typeof leftKey === 'number' ? ' at index ' + leftKey : ' at property ' + wrapPropertyName(leftKey);\n    return 'text diff' + location + ', format is <a href=\"https://code.google.com/' + 'p/google-diff-match-patch/wiki/Unidiff\">a variation of Unidiff</a>';\n  }\n};\n\nvar formatAnyChange = function formatAnyChange(context, delta) {\n  var deltaType = this.getDeltaType(delta);\n  var annotator = deltaAnnotations[deltaType];\n  var htmlNote = annotator && annotator.apply(annotator, Array.prototype.slice.call(arguments, 1));\n  var json = JSON.stringify(delta, null, 2);\n  if (deltaType === 'textdiff') {\n    // split text diffs lines\n    json = json.split('\\\\n').join('\\\\n\"+\\n   \"');\n  }\n  context.indent();\n  context.row(json, htmlNote);\n  context.indent(-1);\n};\n\n/* eslint-disable camelcase */\nAnnotatedFormatter.prototype.format_added = formatAnyChange;\nAnnotatedFormatter.prototype.format_modified = formatAnyChange;\nAnnotatedFormatter.prototype.format_deleted = formatAnyChange;\nAnnotatedFormatter.prototype.format_moved = formatAnyChange;\nAnnotatedFormatter.prototype.format_textdiff = formatAnyChange;\nvar defaultInstance$1 = void 0;\n\nfunction format$1(delta, left) {\n  if (!defaultInstance$1) {\n    defaultInstance$1 = new AnnotatedFormatter();\n  }\n  return defaultInstance$1.format(delta, left);\n}\n\n\n\nvar annotated = Object.freeze({\n\tdefault: AnnotatedFormatter,\n\tformat: format$1\n});\n\nvar OPERATIONS = {\n  add: 'add',\n  remove: 'remove',\n  replace: 'replace',\n  move: 'move'\n};\n\nvar JSONFormatter = function (_BaseFormatter) {\n  inherits(JSONFormatter, _BaseFormatter);\n\n  function JSONFormatter() {\n    classCallCheck(this, JSONFormatter);\n\n    var _this = possibleConstructorReturn(this, (JSONFormatter.__proto__ || Object.getPrototypeOf(JSONFormatter)).call(this));\n\n    _this.includeMoveDestinations = true;\n    return _this;\n  }\n\n  createClass(JSONFormatter, [{\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      get(JSONFormatter.prototype.__proto__ || Object.getPrototypeOf(JSONFormatter.prototype), 'prepareContext', this).call(this, context);\n      context.result = [];\n      context.path = [];\n      context.pushCurrentOp = function (obj) {\n        var op = obj.op,\n            value = obj.value;\n\n        var val = {\n          op: op,\n          path: this.currentPath()\n        };\n        if (typeof value !== 'undefined') {\n          val.value = value;\n        }\n        this.result.push(val);\n      };\n\n      context.pushMoveOp = function (to) {\n        var from = this.currentPath();\n        this.result.push({\n          op: OPERATIONS.move,\n          from: from,\n          path: this.toPath(to)\n        });\n      };\n\n      context.currentPath = function () {\n        return '/' + this.path.join('/');\n      };\n\n      context.toPath = function (toPath) {\n        var to = this.path.slice();\n        to[to.length - 1] = toPath;\n        return '/' + to.join('/');\n      };\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.out('[ERROR] ' + err);\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin() {}\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd() {}\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(_ref, key, leftKey) {\n      var path = _ref.path;\n\n      path.push(leftKey);\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(_ref2) {\n      var path = _ref2.path;\n\n      path.pop();\n    }\n\n    /* jshint camelcase: false */\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged() {}\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination() {}\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      this.formatDeltaChildren(context, delta, left);\n    }\n  }, {\n    key: 'format_added',\n    value: function format_added(context, delta) {\n      context.pushCurrentOp({ op: OPERATIONS.add, value: delta[0] });\n    }\n  }, {\n    key: 'format_modified',\n    value: function format_modified(context, delta) {\n      context.pushCurrentOp({ op: OPERATIONS.replace, value: delta[1] });\n    }\n  }, {\n    key: 'format_deleted',\n    value: function format_deleted(context) {\n      context.pushCurrentOp({ op: OPERATIONS.remove });\n    }\n  }, {\n    key: 'format_moved',\n    value: function format_moved(context, delta) {\n      var to = delta[1];\n      context.pushMoveOp(to);\n    }\n  }, {\n    key: 'format_textdiff',\n    value: function format_textdiff() {\n      throw new Error('Not implemented');\n    }\n  }, {\n    key: 'format',\n    value: function format(delta, left) {\n      var context = {};\n      this.prepareContext(context);\n      this.recurse(context, delta, left);\n      return context.result;\n    }\n  }]);\n  return JSONFormatter;\n}(BaseFormatter);\n\nvar last = function last(arr) {\n  return arr[arr.length - 1];\n};\n\nvar sortBy = function sortBy(arr, pred) {\n  arr.sort(pred);\n  return arr;\n};\n\nvar compareByIndexDesc = function compareByIndexDesc(indexA, indexB) {\n  var lastA = parseInt(indexA, 10);\n  var lastB = parseInt(indexB, 10);\n  if (!(isNaN(lastA) || isNaN(lastB))) {\n    return lastB - lastA;\n  } else {\n    return 0;\n  }\n};\n\nvar opsByDescendingOrder = function opsByDescendingOrder(removeOps) {\n  return sortBy(removeOps, function (a, b) {\n    var splitA = a.path.split('/');\n    var splitB = b.path.split('/');\n    if (splitA.length !== splitB.length) {\n      return splitA.length - splitB.length;\n    } else {\n      return compareByIndexDesc(last(splitA), last(splitB));\n    }\n  });\n};\n\nvar partitionOps = function partitionOps(arr, fns) {\n  var initArr = Array(fns.length + 1).fill().map(function () {\n    return [];\n  });\n  return arr.map(function (item) {\n    var position = fns.map(function (fn) {\n      return fn(item);\n    }).indexOf(true);\n    if (position < 0) {\n      position = fns.length;\n    }\n    return { item: item, position: position };\n  }).reduce(function (acc, item) {\n    acc[item.position].push(item.item);\n    return acc;\n  }, initArr);\n};\nvar isMoveOp = function isMoveOp(_ref3) {\n  var op = _ref3.op;\n  return op === 'move';\n};\nvar isRemoveOp = function isRemoveOp(_ref4) {\n  var op = _ref4.op;\n  return op === 'remove';\n};\n\nvar reorderOps = function reorderOps(diff) {\n  var _partitionOps = partitionOps(diff, [isMoveOp, isRemoveOp]),\n      _partitionOps2 = slicedToArray(_partitionOps, 3),\n      moveOps = _partitionOps2[0],\n      removedOps = _partitionOps2[1],\n      restOps = _partitionOps2[2];\n\n  var removeOpsReverse = opsByDescendingOrder(removedOps);\n  return [].concat(toConsumableArray(removeOpsReverse), toConsumableArray(moveOps), toConsumableArray(restOps));\n};\n\nvar defaultInstance$2 = void 0;\n\nvar format$2 = function format(delta, left) {\n  if (!defaultInstance$2) {\n    defaultInstance$2 = new JSONFormatter();\n  }\n  return reorderOps(defaultInstance$2.format(delta, left));\n};\n\nvar log = function log(delta, left) {\n  console.log(format$2(delta, left));\n};\n\n\n\nvar jsonpatch = Object.freeze({\n\tdefault: JSONFormatter,\n\tpartitionOps: partitionOps,\n\tformat: format$2,\n\tlog: log\n});\n\nfunction chalkColor(name) {\n  return chalk && chalk[name] || function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return args;\n  };\n}\n\nvar colors = {\n  added: chalkColor('green'),\n  deleted: chalkColor('red'),\n  movedestination: chalkColor('gray'),\n  moved: chalkColor('yellow'),\n  unchanged: chalkColor('gray'),\n  error: chalkColor('white.bgRed'),\n  textDiffLine: chalkColor('gray')\n};\n\nvar ConsoleFormatter = function (_BaseFormatter) {\n  inherits(ConsoleFormatter, _BaseFormatter);\n\n  function ConsoleFormatter() {\n    classCallCheck(this, ConsoleFormatter);\n\n    var _this = possibleConstructorReturn(this, (ConsoleFormatter.__proto__ || Object.getPrototypeOf(ConsoleFormatter)).call(this));\n\n    _this.includeMoveDestinations = false;\n    return _this;\n  }\n\n  createClass(ConsoleFormatter, [{\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      get(ConsoleFormatter.prototype.__proto__ || Object.getPrototypeOf(ConsoleFormatter.prototype), 'prepareContext', this).call(this, context);\n      context.indent = function (levels) {\n        this.indentLevel = (this.indentLevel || 0) + (typeof levels === 'undefined' ? 1 : levels);\n        this.indentPad = new Array(this.indentLevel + 1).join('  ');\n        this.outLine();\n      };\n      context.outLine = function () {\n        this.buffer.push('\\n' + (this.indentPad || ''));\n      };\n      context.out = function () {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        for (var i = 0, l = args.length; i < l; i++) {\n          var lines = args[i].split('\\n');\n          var text = lines.join('\\n' + (this.indentPad || ''));\n          if (this.color && this.color[0]) {\n            text = this.color[0](text);\n          }\n          this.buffer.push(text);\n        }\n      };\n      context.pushColor = function (color) {\n        this.color = this.color || [];\n        this.color.unshift(color);\n      };\n      context.popColor = function () {\n        this.color = this.color || [];\n        this.color.shift();\n      };\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.pushColor(colors.error);\n      context.out('[ERROR]' + err);\n      context.popColor();\n    }\n  }, {\n    key: 'formatValue',\n    value: function formatValue(context, value) {\n      context.out(JSON.stringify(value, null, 2));\n    }\n  }, {\n    key: 'formatTextDiffString',\n    value: function formatTextDiffString(context, value) {\n      var lines = this.parseTextDiff(value);\n      context.indent();\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        context.pushColor(colors.textDiffLine);\n        context.out(line.location.line + ',' + line.location.chr + ' ');\n        context.popColor();\n        var pieces = line.pieces;\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          var piece = pieces[pieceIndex];\n          context.pushColor(colors[piece.type]);\n          context.out(piece.text);\n          context.popColor();\n        }\n        if (i < l - 1) {\n          context.outLine();\n        }\n      }\n      context.indent(-1);\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin(context, type, nodeType) {\n      context.pushColor(colors[type]);\n      if (type === 'node') {\n        context.out(nodeType === 'array' ? '[' : '{');\n        context.indent();\n      }\n    }\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd(context, type, nodeType) {\n      if (type === 'node') {\n        context.indent(-1);\n        context.out(nodeType === 'array' ? ']' : '}');\n      }\n      context.popColor();\n    }\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(context, key, leftKey, type, nodeType) {\n      context.pushColor(colors[type]);\n      context.out(leftKey + ': ');\n      if (type === 'node') {\n        context.out(nodeType === 'array' ? '[' : '{');\n        context.indent();\n      }\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(context, key, leftKey, type, nodeType, isLast) {\n      if (type === 'node') {\n        context.indent(-1);\n        context.out(nodeType === 'array' ? ']' : '}' + (isLast ? '' : ','));\n      }\n      if (!isLast) {\n        context.outLine();\n      }\n      context.popColor();\n    }\n\n    /* jshint camelcase: false */\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      this.formatValue(context, left);\n    }\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      this.formatValue(context, left);\n    }\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      // recurse\n      this.formatDeltaChildren(context, delta, left);\n    }\n  }, {\n    key: 'format_added',\n    value: function format_added(context, delta) {\n      this.formatValue(context, delta[0]);\n    }\n  }, {\n    key: 'format_modified',\n    value: function format_modified(context, delta) {\n      context.pushColor(colors.deleted);\n      this.formatValue(context, delta[0]);\n      context.popColor();\n      context.out(' => ');\n      context.pushColor(colors.added);\n      this.formatValue(context, delta[1]);\n      context.popColor();\n    }\n  }, {\n    key: 'format_deleted',\n    value: function format_deleted(context, delta) {\n      this.formatValue(context, delta[0]);\n    }\n  }, {\n    key: 'format_moved',\n    value: function format_moved(context, delta) {\n      context.out('==> ' + delta[1]);\n    }\n  }, {\n    key: 'format_textdiff',\n    value: function format_textdiff(context, delta) {\n      this.formatTextDiffString(context, delta[0]);\n    }\n  }]);\n  return ConsoleFormatter;\n}(BaseFormatter);\n\nvar defaultInstance$3 = void 0;\n\nvar format$3 = function format(delta, left) {\n  if (!defaultInstance$3) {\n    defaultInstance$3 = new ConsoleFormatter();\n  }\n  return defaultInstance$3.format(delta, left);\n};\n\nfunction log$1(delta, left) {\n  console.log(format$3(delta, left));\n}\n\n\n\nvar console$1 = Object.freeze({\n\tdefault: ConsoleFormatter,\n\tformat: format$3,\n\tlog: log$1\n});\n\n\n\nvar index = Object.freeze({\n\tbase: base,\n\thtml: html,\n\tannotated: annotated,\n\tjsonpatch: jsonpatch,\n\tconsole: console$1\n});\n\n// use as 2nd parameter for JSON.parse to revive Date instances\nfunction dateReviver(key, value) {\n  var parts = void 0;\n  if (typeof value === 'string') {\n    // eslint-disable-next-line max-len\n    parts = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d*))?(Z|([+-])(\\d{2}):(\\d{2}))$/.exec(value);\n    if (parts) {\n      return new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +(parts[7] || 0)));\n    }\n  }\n  return value;\n}\n\nfunction create(options) {\n  return new DiffPatcher(options);\n}\n\nvar defaultInstance$4 = void 0;\n\nfunction diff() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.diff.apply(defaultInstance$4, arguments);\n}\n\nfunction patch() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.patch.apply(defaultInstance$4, arguments);\n}\n\nfunction unpatch() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.unpatch.apply(defaultInstance$4, arguments);\n}\n\nfunction reverse() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.reverse.apply(defaultInstance$4, arguments);\n}\n\nfunction clone$1() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.clone.apply(defaultInstance$4, arguments);\n}\n\nexports.DiffPatcher = DiffPatcher;\nexports.formatters = index;\nexports.console = console$1;\nexports.create = create;\nexports.dateReviver = dateReviver;\nexports.diff = diff;\nexports.patch = patch;\nexports.unpatch = unpatch;\nexports.reverse = reverse;\nexports.clone = clone$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","import { html2json } from 'html2json';\r\nimport * as jsondiffpatch from 'jsondiffpatch';\r\n\r\nvar diff = {};\r\n\r\ntry {\r\n    chrome.runtime.sendMessage({\r\n        DOM: createHTMLString()\r\n    },\r\n    function (response) {\r\n        diff = {};\r\n        var diffPercent = 0;\r\n        // console.log(\"Response: \", response);\r\n        diff = makeDIFF(response, function(diff) {\r\n            //send message to popup.js\r\n            diffPercent = calculateDiffPercent(response, function(diffPercent) {\r\n                try {\r\n                    chrome.runtime.sendMessage({\r\n                        DIFF: diff,\r\n                        prev: html2json(response.oldValue),\r\n                        percent: diffPercent\r\n                    },\r\n                    function (response) {\r\n                        // console.log(\"Response: \", response);\r\n                    });\r\n                } catch(e) {\r\n                    console.log(\"Something went wrong while trying to send the DOM diff: \" + e);\r\n                }\r\n            });\r\n        });\r\n    });\r\n} catch(e) {\r\n    console.log(\"Something went wrong: \" + e);\r\n}\r\n\r\n// calculate percentage of changes between old and new DOMs\r\n// formula borrowed from https://www.calculator.net/percent-calculator.html\r\nfunction calculateDiffPercent(response, cb) {\r\n    var oldValue = JSON.stringify(response.oldValue);\r\n    var newValue = JSON.stringify(response.newValue);\r\n    \r\n    var diffPercent = (Math.abs(oldValue.length - newValue.length) / ((oldValue.length + newValue.length)/2)) * 100;\r\n    console.log(diffPercent);\r\n    cb(diffPercent);\r\n}\r\n\r\n// uses DiffDOM to make a diff of two HTML strings\r\nfunction makeDIFF(response, cb) {\r\n    if (response.oldValue != undefined && response.newValue != undefined) { \r\n        let diff = {};\r\n        console.log(\"Response: \", response);\r\n\r\n        // replace whitespace and newline before diff\r\n        console.log(\"1\" + response.oldValue);\r\n        console.log(\"2\" + response.newValue);\r\n        let oldValue = html2json(response.oldValue); \r\n        let newValue = html2json(response.newValue); \r\n\r\n        console.log(oldValue);\r\n        console.log(newValue);\r\n\r\n        diff = jsondiffpatch.diff(oldValue, newValue);\r\n        console.log(diff);\r\n\r\n        if (diff === undefined) {\r\n            diff = {content: false};\r\n        }\r\n    \r\n        cb(diff);\r\n    }\r\n}\r\n\r\nfunction createHTMLString() {\r\n    // console.log(document.getElementsByTagName('center'));\r\n    // if (!document.getElementsByTagName('center')) { return ''; }\r\n\r\n    // let centerHTML = document.getElementsByTagName('center');\r\n    // let outputString = \"\";\r\n\r\n    // var i;\r\n    // for (i = 0; i < centerHTML.length; i++) {\r\n    //     outputString = outputString + centerHTML[i].innerHTML;\r\n    // }\r\n    // console.log(outputString);\r\n    // return outputString\r\n    let outputString = document.body.outerHTML;\r\n    let splitted = [];\r\n    splitted = outputString.split(\"<div id=\\\"wm-ipp-base\\\" lang=\\\"en\\\" style=\\\"display: block; direction: ltr;\\\"> </div>\")\r\n    // console.log(outputString);\r\n\r\n    outputString = splitted[0].concat(splitted[1]);\r\n    // console.log(outputString);\r\n    return outputString;\r\n}","(function(global) {\n  DEBUG = false;\n  var debug = DEBUG ? console.log.bind(console) : function(){};\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    require('../lib/Pure-JavaScript-HTML5-Parser/htmlparser.js');\n  }\n\n  function q(v) {\n    return '\"' + v + '\"';\n  }\n\n  function removeDOCTYPE(html) {\n    return html\n      .replace(/<\\?xml.*\\?>\\n/, '')\n      .replace(/<!doctype.*\\>\\n/, '')\n      .replace(/<!DOCTYPE.*\\>\\n/, '');\n  }\n\n  global.html2json = function html2json(html) {\n    html = removeDOCTYPE(html);\n    var bufArray = [];\n    var results = {\n      node: 'root',\n      child: [],\n    };\n    HTMLParser(html, {\n      start: function(tag, attrs, unary) {\n        debug(tag, attrs, unary);\n        // node for this element\n        var node = {\n          node: 'element',\n          tag: tag,\n        };\n        if (attrs.length !== 0) {\n          node.attr = attrs.reduce(function(pre, attr) {\n            var name = attr.name;\n            var value = attr.value;\n\n            // has multi attibutes\n            // make it array of attribute\n            if (value.match(/ /)) {\n              value = value.split(' ');\n            }\n\n            // if attr already exists\n            // merge it\n            if (pre[name]) {\n              if (Array.isArray(pre[name])) {\n                // already array, push to last\n                pre[name].push(value);\n              } else {\n                // single value, make it array\n                pre[name] = [pre[name], value];\n              }\n            } else {\n              // not exist, put it\n              pre[name] = value;\n            }\n\n            return pre;\n          }, {});\n        }\n        if (unary) {\n          // if this tag dosen't have end tag\n          // like <img src=\"hoge.png\"/>\n          // add to parents\n          var parent = bufArray[0] || results;\n          if (parent.child === undefined) {\n            parent.child = [];\n          }\n          parent.child.push(node);\n        } else {\n          bufArray.unshift(node);\n        }\n      },\n      end: function(tag) {\n        debug(tag);\n        // merge into parent tag\n        var node = bufArray.shift();\n        if (node.tag !== tag) console.error('invalid state: mismatch end tag');\n\n        if (bufArray.length === 0) {\n          results.child.push(node);\n        } else {\n          var parent = bufArray[0];\n          if (parent.child === undefined) {\n            parent.child = [];\n          }\n          parent.child.push(node);\n        }\n      },\n      chars: function(text) {\n        debug(text);\n        var node = {\n          node: 'text',\n          text: text,\n        };\n        if (bufArray.length === 0) {\n          results.child.push(node);\n        } else {\n          var parent = bufArray[0];\n          if (parent.child === undefined) {\n            parent.child = [];\n          }\n          parent.child.push(node);\n        }\n      },\n      comment: function(text) {\n        debug(text);\n        var node = {\n          node: 'comment',\n          text: text,\n        };\n        var parent = bufArray[0];\n        if (parent.child === undefined) {\n          parent.child = [];\n        }\n        parent.child.push(node);\n      },\n    });\n    return results;\n  };\n\n  global.json2html = function json2html(json) {\n    // Empty Elements - HTML 4.01\n    var empty = ['area', 'base', 'basefont', 'br', 'col', 'frame', 'hr', 'img', 'input', 'isindex', 'link', 'meta', 'param', 'embed'];\n\n    var child = '';\n    if (json.child) {\n      child = json.child.map(function(c) {\n        return json2html(c);\n      }).join('');\n    }\n\n    var attr = '';\n    if (json.attr) {\n      attr = Object.keys(json.attr).map(function(key) {\n        var value = json.attr[key];\n        if (Array.isArray(value)) value = value.join(' ');\n        return key + '=' + q(value);\n      }).join(' ');\n      if (attr !== '') attr = ' ' + attr;\n    }\n\n    if (json.node === 'element') {\n      var tag = json.tag;\n      if (empty.indexOf(tag) > -1) {\n        // empty element\n        return '<' + json.tag + attr + '/>';\n      }\n\n      // non empty element\n      var open = '<' + json.tag + attr + '>';\n      var close = '</' + json.tag + '>';\n      return open + child + close;\n    }\n\n    if (json.node === 'text') {\n      return json.text;\n    }\n\n    if (json.node === 'comment') {\n      return '<!--' + json.text + '-->';\n    }\n\n    if (json.node === 'root') {\n      return child;\n    }\n  };\n})(this);\n","/*\r\n * HTML5 Parser By Sam Blowes\r\n *\r\n * Designed for HTML5 documents\r\n *\r\n * Original code by John Resig (ejohn.org)\r\n * http://ejohn.org/blog/pure-javascript-html-parser/\r\n * Original code by Erik Arvidsson, Mozilla Public License\r\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\r\n *\r\n * ----------------------------------------------------------------------------\r\n * License\r\n * ----------------------------------------------------------------------------\r\n *\r\n * This code is triple licensed using Apache Software License 2.0,\r\n * Mozilla Public License or GNU Public License\r\n * \r\n * ////////////////////////////////////////////////////////////////////////////\r\n * \r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\r\n * use this file except in compliance with the License.  You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n * \r\n * ////////////////////////////////////////////////////////////////////////////\r\n * \r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * http://www.mozilla.org/MPL/\r\n * \r\n * Software distributed under the License is distributed on an \"AS IS\"\r\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing rights and limitations\r\n * under the License.\r\n * \r\n * The Original Code is Simple HTML Parser.\r\n * \r\n * The Initial Developer of the Original Code is Erik Arvidsson.\r\n * Portions created by Erik Arvidssson are Copyright (C) 2004. All Rights\r\n * Reserved.\r\n * \r\n * ////////////////////////////////////////////////////////////////////////////\r\n * \r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Usage\r\n * ----------------------------------------------------------------------------\r\n *\r\n * // Use like so:\r\n * HTMLParser(htmlString, {\r\n *     start: function(tag, attrs, unary) {},\r\n *     end: function(tag) {},\r\n *     chars: function(text) {},\r\n *     comment: function(text) {}\r\n * });\r\n *\r\n * // or to get an XML string:\r\n * HTMLtoXML(htmlString);\r\n *\r\n * // or to get an XML DOM Document\r\n * HTMLtoDOM(htmlString);\r\n *\r\n * // or to inject into an existing document/DOM node\r\n * HTMLtoDOM(htmlString, document);\r\n * HTMLtoDOM(htmlString, document.body);\r\n *\r\n */\r\n\r\n(function () {\r\n\r\n\t// Regular Expressions for parsing tags and attributes\r\n\tvar startTag = /^<([-A-Za-z0-9_]+)((?:\\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/,\r\n\t\tendTag = /^<\\/([-A-Za-z0-9_]+)[^>]*>/,\r\n\t\tattr = /([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g;\r\n\r\n\t// Empty Elements - HTML 5\r\n\tvar empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr\");\r\n\r\n\t// Block Elements - HTML 5\r\n\tvar block = makeMap(\"a,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video\");\r\n\r\n\t// Inline Elements - HTML 5\r\n\tvar inline = makeMap(\"abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var\");\r\n\r\n\t// Elements that you can, intentionally, leave open\r\n\t// (and which close themselves)\r\n\tvar closeSelf = makeMap(\"colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr\");\r\n\r\n\t// Attributes that have their values filled in disabled=\"disabled\"\r\n\tvar fillAttrs = makeMap(\"checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected\");\r\n\r\n\t// Special Elements (can contain anything)\r\n\tvar special = makeMap(\"script,style\");\r\n\r\n\tvar HTMLParser = this.HTMLParser = function (html, handler) {\r\n\t\tvar index, chars, match, stack = [], last = html;\r\n\t\tstack.last = function () {\r\n\t\t\treturn this[this.length - 1];\r\n\t\t};\r\n\r\n\t\twhile (html) {\r\n\t\t\tchars = true;\r\n\r\n\t\t\t// Make sure we're not in a script or style element\r\n\t\t\tif (!stack.last() || !special[stack.last()]) {\r\n\r\n\t\t\t\t// Comment\r\n\t\t\t\tif (html.indexOf(\"<!--\") == 0) {\r\n\t\t\t\t\tindex = html.indexOf(\"-->\");\r\n\r\n\t\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t\tif (handler.comment)\r\n\t\t\t\t\t\t\thandler.comment(html.substring(4, index));\r\n\t\t\t\t\t\thtml = html.substring(index + 3);\r\n\t\t\t\t\t\tchars = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// end tag\r\n\t\t\t\t} else if (html.indexOf(\"</\") == 0) {\r\n\t\t\t\t\tmatch = html.match(endTag);\r\n\r\n\t\t\t\t\tif (match) {\r\n\t\t\t\t\t\thtml = html.substring(match[0].length);\r\n\t\t\t\t\t\tmatch[0].replace(endTag, parseEndTag);\r\n\t\t\t\t\t\tchars = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// start tag\r\n\t\t\t\t} else if (html.indexOf(\"<\") == 0) {\r\n\t\t\t\t\tmatch = html.match(startTag);\r\n\r\n\t\t\t\t\tif (match) {\r\n\t\t\t\t\t\thtml = html.substring(match[0].length);\r\n\t\t\t\t\t\tmatch[0].replace(startTag, parseStartTag);\r\n\t\t\t\t\t\tchars = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (chars) {\r\n\t\t\t\t\tindex = html.indexOf(\"<\");\r\n\r\n\t\t\t\t\tvar text = index < 0 ? html : html.substring(0, index);\r\n\t\t\t\t\thtml = index < 0 ? \"\" : html.substring(index);\r\n\r\n\t\t\t\t\tif (handler.chars)\r\n\t\t\t\t\t\thandler.chars(text);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\thtml = html.replace(new RegExp(\"([\\\\s\\\\S]*?)<\\/\" + stack.last() + \"[^>]*>\"), function (all, text) {\r\n\t\t\t\t\ttext = text.replace(/<!--([\\s\\S]*?)-->|<!\\[CDATA\\[([\\s\\S]*?)]]>/g, \"$1$2\");\r\n\t\t\t\t\tif (handler.chars)\r\n\t\t\t\t\t\thandler.chars(text);\r\n\r\n\t\t\t\t\treturn \"\";\r\n\t\t\t\t});\r\n\r\n\t\t\t\tparseEndTag(\"\", stack.last());\r\n\t\t\t}\r\n\r\n\t\t\tif (html == last)\r\n\t\t\t\tthrow \"Parse Error: \" + html;\r\n\t\t\tlast = html;\r\n\t\t}\r\n\r\n\t\t// Clean up any remaining tags\r\n\t\tparseEndTag();\r\n\r\n\t\tfunction parseStartTag(tag, tagName, rest, unary) {\r\n\t\t\ttagName = tagName.toLowerCase();\r\n\r\n\t\t\tif (block[tagName]) {\r\n\t\t\t\twhile (stack.last() && inline[stack.last()]) {\r\n\t\t\t\t\tparseEndTag(\"\", stack.last());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (closeSelf[tagName] && stack.last() == tagName) {\r\n\t\t\t\tparseEndTag(\"\", tagName);\r\n\t\t\t}\r\n\r\n\t\t\tunary = empty[tagName] || !!unary;\r\n\r\n\t\t\tif (!unary)\r\n\t\t\t\tstack.push(tagName);\r\n\r\n\t\t\tif (handler.start) {\r\n\t\t\t\tvar attrs = [];\r\n\r\n\t\t\t\trest.replace(attr, function (match, name) {\r\n\t\t\t\t\tvar value = arguments[2] ? arguments[2] :\r\n\t\t\t\t\t\targuments[3] ? arguments[3] :\r\n\t\t\t\t\t\targuments[4] ? arguments[4] :\r\n\t\t\t\t\t\tfillAttrs[name] ? name : \"\";\r\n\r\n\t\t\t\t\tattrs.push({\r\n\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tescaped: value.replace(/(^|[^\\\\])\"/g, '$1\\\\\\\"') //\"\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (handler.start)\r\n\t\t\t\t\thandler.start(tagName, attrs, unary);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction parseEndTag(tag, tagName) {\r\n\t\t\t// If no tag name is provided, clean shop\r\n\t\t\tif (!tagName)\r\n\t\t\t\tvar pos = 0;\r\n\r\n\t\t\t\t// Find the closest opened tag of the same type\r\n\t\t\telse\r\n\t\t\t\tfor (var pos = stack.length - 1; pos >= 0; pos--)\r\n\t\t\t\t\tif (stack[pos] == tagName)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\tif (pos >= 0) {\r\n\t\t\t\t// Close all the open elements, up the stack\r\n\t\t\t\tfor (var i = stack.length - 1; i >= pos; i--)\r\n\t\t\t\t\tif (handler.end)\r\n\t\t\t\t\t\thandler.end(stack[i]);\r\n\r\n\t\t\t\t// Remove the open elements from the stack\r\n\t\t\t\tstack.length = pos;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tthis.HTMLtoXML = function (html) {\r\n\t\tvar results = \"\";\r\n\r\n\t\tHTMLParser(html, {\r\n\t\t\tstart: function (tag, attrs, unary) {\r\n\t\t\t\tresults += \"<\" + tag;\r\n\r\n\t\t\t\tfor (var i = 0; i < attrs.length; i++)\r\n\t\t\t\t\tresults += \" \" + attrs[i].name + '=\"' + attrs[i].escaped + '\"';\r\n\t\t\t\tresults += \">\";\r\n\t\t\t},\r\n\t\t\tend: function (tag) {\r\n\t\t\t\tresults += \"</\" + tag + \">\";\r\n\t\t\t},\r\n\t\t\tchars: function (text) {\r\n\t\t\t\tresults += text;\r\n\t\t\t},\r\n\t\t\tcomment: function (text) {\r\n\t\t\t\tresults += \"<!--\" + text + \"-->\";\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn results;\r\n\t};\r\n\r\n\tthis.HTMLtoDOM = function (html, doc) {\r\n\t\t// There can be only one of these elements\r\n\t\tvar one = makeMap(\"html,head,body,title\");\r\n\r\n\t\t// Enforce a structure for the document\r\n\t\tvar structure = {\r\n\t\t\tlink: \"head\",\r\n\t\t\tbase: \"head\"\r\n\t\t};\r\n\r\n\t\tif (!doc) {\r\n\t\t\tif (typeof DOMDocument != \"undefined\")\r\n\t\t\t\tdoc = new DOMDocument();\r\n\t\t\telse if (typeof document != \"undefined\" && document.implementation && document.implementation.createDocument)\r\n\t\t\t\tdoc = document.implementation.createDocument(\"\", \"\", null);\r\n\t\t\telse if (typeof ActiveX != \"undefined\")\r\n\t\t\t\tdoc = new ActiveXObject(\"Msxml.DOMDocument\");\r\n\r\n\t\t} else\r\n\t\t\tdoc = doc.ownerDocument ||\r\n\t\t\t\tdoc.getOwnerDocument && doc.getOwnerDocument() ||\r\n\t\t\t\tdoc;\r\n\r\n\t\tvar elems = [],\r\n\t\t\tdocumentElement = doc.documentElement ||\r\n\t\t\t\tdoc.getDocumentElement && doc.getDocumentElement();\r\n\r\n\t\t// If we're dealing with an empty document then we\r\n\t\t// need to pre-populate it with the HTML document structure\r\n\t\tif (!documentElement && doc.createElement) (function () {\r\n\t\t\tvar html = doc.createElement(\"html\");\r\n\t\t\tvar head = doc.createElement(\"head\");\r\n\t\t\thead.appendChild(doc.createElement(\"title\"));\r\n\t\t\thtml.appendChild(head);\r\n\t\t\thtml.appendChild(doc.createElement(\"body\"));\r\n\t\t\tdoc.appendChild(html);\r\n\t\t})();\r\n\r\n\t\t// Find all the unique elements\r\n\t\tif (doc.getElementsByTagName)\r\n\t\t\tfor (var i in one)\r\n\t\t\t\tone[i] = doc.getElementsByTagName(i)[0];\r\n\r\n\t\t// If we're working with a document, inject contents into\r\n\t\t// the body element\r\n\t\tvar curParentNode = one.body;\r\n\r\n\t\tHTMLParser(html, {\r\n\t\t\tstart: function (tagName, attrs, unary) {\r\n\t\t\t\t// If it's a pre-built element, then we can ignore\r\n\t\t\t\t// its construction\r\n\t\t\t\tif (one[tagName]) {\r\n\t\t\t\t\tcurParentNode = one[tagName];\r\n\t\t\t\t\tif (!unary) {\r\n\t\t\t\t\t\telems.push(curParentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar elem = doc.createElement(tagName);\r\n\r\n\t\t\t\tfor (var attr in attrs)\r\n\t\t\t\t\telem.setAttribute(attrs[attr].name, attrs[attr].value);\r\n\r\n\t\t\t\tif (structure[tagName] && typeof one[structure[tagName]] != \"boolean\")\r\n\t\t\t\t\tone[structure[tagName]].appendChild(elem);\r\n\r\n\t\t\t\telse if (curParentNode && curParentNode.appendChild)\r\n\t\t\t\t\tcurParentNode.appendChild(elem);\r\n\r\n\t\t\t\tif (!unary) {\r\n\t\t\t\t\telems.push(elem);\r\n\t\t\t\t\tcurParentNode = elem;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tend: function (tag) {\r\n\t\t\t\telems.length -= 1;\r\n\r\n\t\t\t\t// Init the new parentNode\r\n\t\t\t\tcurParentNode = elems[elems.length - 1];\r\n\t\t\t},\r\n\t\t\tchars: function (text) {\r\n\t\t\t\tcurParentNode.appendChild(doc.createTextNode(text));\r\n\t\t\t},\r\n\t\t\tcomment: function (text) {\r\n\t\t\t\t// create comment node\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn doc;\r\n\t};\r\n\r\n\tfunction makeMap(str) {\r\n\t\tvar obj = {}, items = str.split(\",\");\r\n\t\tfor (var i = 0; i < items.length; i++)\r\n\t\t\tobj[items[i]] = true;\r\n\t\treturn obj;\r\n\t}\r\n})();\r\n"],"sourceRoot":""}