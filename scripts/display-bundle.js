!function(t){var e={};function o(r){if(e[r])return e[r].exports;var n=e[r]={i:r,l:!1,exports:{}};return t[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=t,o.c=e,o.d=function(t,e,r){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)o.d(r,n,function(e){return t[e]}.bind(null,n));return r},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=6)}({6:function(t,e,o){"use strict";o.r(e);const r="function"==typeof Array.isArray?Array.isArray:t=>t instanceof Array,n="function"==typeof Object.keys?t=>Object.keys(t):t=>{const e=[];for(let o in t)Object.prototype.hasOwnProperty.call(t,o)&&e.push(o);return e},i=t=>"_"===t.substr(0,1)?t.slice(1):t,s=t=>"_t"===t?-1:"_"===t.substr(0,1)?parseInt(t.slice(1),10):parseInt(t,10)+.1,a=(t,e)=>s(t)-s(e);var d=class{format(t,e){const o={};return this.prepareContext(o),this.recurse(o,t,e),this.finalize(o)}prepareContext(t){t.buffer=[],t.out=function(...t){this.buffer.push(...t)}}typeFormattterNotFound(t,e){throw new Error(`cannot format delta type: ${e}`)}typeFormattterErrorFormatter(t,e){return e.toString()}finalize({buffer:t}){if(r(t))return t.join("")}recurse(t,e,o,r,n,i,s){const a=e&&i?i.value:o;if(void 0===e&&void 0===r)return;const d=this.getDeltaType(e,i),f="node"===d?"a"===e._t?"array":"object":"";let l;void 0!==r?this.nodeBegin(t,r,n,d,f,s):this.rootBegin(t,d,f);try{(l=this[`format_${d}`]||this.typeFormattterNotFound(t,d)).call(this,t,e,a,r,n,i)}catch(o){this.typeFormattterErrorFormatter(t,o,e,a,r,n,i),"undefined"!=typeof console&&console.error&&console.error(o.stack)}void 0!==r?this.nodeEnd(t,r,n,d,f,s):this.rootEnd(t,d,f)}formatDeltaChildren(t,e,o){const r=this;this.forEachDeltaKey(e,o,(n,i,s,a)=>{r.recurse(t,e[n],o?o[i]:void 0,n,i,s,a)})}forEachDeltaKey(t,e,o){const s=n(t),d="a"===t._t,f={};let l;if(void 0!==e)for(l in e)Object.prototype.hasOwnProperty.call(e,l)&&(void 0!==t[l]||d&&void 0!==t[`_${l}`]||s.push(l));for(l in t)if(Object.prototype.hasOwnProperty.call(t,l)){const o=t[l];r(o)&&3===o[2]&&(f[o[1].toString()]={key:l,value:e&&e[parseInt(l.substr(1))]},!1!==this.includeMoveDestinations&&void 0===e&&void 0===t[o[1]]&&s.push(o[1].toString()))}d?s.sort(a):s.sort();for(let t=0,e=s.length;t<e;t++){const r=s[t];if(d&&"_t"===r)continue;const n=d?"number"==typeof r?r:parseInt(i(r),10):r,a=t===e-1;o(r,n,f[n],a)}}getDeltaType(t,e){if(void 0===t)return void 0!==e?"movedestination":"unchanged";if(r(t)){if(1===t.length)return"added";if(2===t.length)return"modified";if(3===t.length&&0===t[2])return"deleted";if(3===t.length&&2===t[2])return"textdiff";if(3===t.length&&3===t[2])return"moved"}else if("object"==typeof t)return"node";return"unknown"}parseTextDiff(t){const e=[],o=t.split("\n@@ ");for(let t=0,r=o.length;t<r;t++){const r=o[t],n={pieces:[]},i=/^(?:@@ )?[-+]?(\d+),(\d+)/.exec(r).slice(1);n.location={line:i[0],chr:i[1]};const s=r.split("\n").slice(1);for(let t=0,e=s.length;t<e;t++){const e=s[t];if(!e.length)continue;const o={type:"context"};"+"===e.substr(0,1)?o.type="added":"-"===e.substr(0,1)&&(o.type="deleted"),o.text=e.slice(1),n.pieces.push(o)}e.push(n)}return e}};o.d(e,"showUnchanged",(function(){return u})),o.d(e,"hideUnchanged",(function(){return h})),o.d(e,"format",(function(){return v}));class f extends d{typeFormattterErrorFormatter(t,e){t.out(`<pre class="jsondiffpatch-error">${e}</pre>`)}formatValue(t,e){t.out(`<pre>${l(JSON.stringify(e,null,2))}</pre>`)}formatTextDiffString(t,e){let o=this.parseTextDiff(e);t.out('<ul class="jsondiffpatch-textdiff">');for(let e=0,r=o.length;e<r;e++){let r=o[e];t.out('<li><div class="jsondiffpatch-textdiff-location">'+`<span class="jsondiffpatch-textdiff-line-number">${r.location.line}</span><span class="jsondiffpatch-textdiff-char">${r.location.chr}</span></div><div class="jsondiffpatch-textdiff-line">`);let n=r.pieces;for(let e=0,o=n.length;e<o;e++){let o=n[e];t.out(`<span class="jsondiffpatch-textdiff-${o.type}">${l(decodeURI(o.text))}</span>`)}t.out("</div></li>")}t.out("</ul>")}rootBegin(t,e,o){let r=`jsondiffpatch-${e}${o?` jsondiffpatch-child-node-type-${o}`:""}`;t.out(`<div class="jsondiffpatch-delta ${r}">`)}rootEnd(t){t.out(`</div>${t.hasArrows?'<script type="text/javascript">setTimeout('+`${c.toString()},10);<\/script>`:""}`)}nodeBegin(t,e,o,r,n){let i=`jsondiffpatch-${r}${n?` jsondiffpatch-child-node-type-${n}`:""}`;t.out(`<li class="${i}" data-key="${o}">`+`<div class="jsondiffpatch-property-name">${o}</div>`)}nodeEnd(t){t.out("</li>")}format_unchanged(t,e,o){void 0!==o&&(t.out('<div class="jsondiffpatch-value">'),this.formatValue(t,o),t.out("</div>"))}format_movedestination(t,e,o){void 0!==o&&(t.out('<div class="jsondiffpatch-value">'),this.formatValue(t,o),t.out("</div>"))}format_node(t,e,o){let r="a"===e._t?"array":"object";t.out(`<ul class="jsondiffpatch-node jsondiffpatch-node-type-${r}">`),this.formatDeltaChildren(t,e,o),t.out("</ul>")}format_added(t,e){t.out('<div class="jsondiffpatch-value">'),this.formatValue(t,e[0]),t.out("</div>")}format_modified(t,e){t.out('<div class="jsondiffpatch-value jsondiffpatch-left-value">'),this.formatValue(t,e[0]),t.out('</div><div class="jsondiffpatch-value jsondiffpatch-right-value">'),this.formatValue(t,e[1]),t.out("</div>")}format_deleted(t,e){t.out('<div class="jsondiffpatch-value">'),this.formatValue(t,e[0]),t.out("</div>")}format_moved(t,e){t.out('<div class="jsondiffpatch-value">'),this.formatValue(t,e[0]),t.out(`</div><div class="jsondiffpatch-moved-destination">${e[1]}</div>`),t.out('<div class="jsondiffpatch-arrow" style="position: relative; left: -34px;">\n          <svg width="30" height="60" style="position: absolute; display: none;">\n          <defs>\n              <marker id="markerArrow" markerWidth="8" markerHeight="8"\n                 refx="2" refy="4"\n                     orient="auto" markerUnits="userSpaceOnUse">\n                  <path d="M1,1 L1,7 L7,4 L1,1" style="fill: #339;" />\n              </marker>\n          </defs>\n          <path d="M30,0 Q-10,25 26,50"\n            style="stroke: #88f; stroke-width: 2px; fill: none; stroke-opacity: 0.5; marker-end: url(#markerArrow);"\n          ></path>\n          </svg>\n      </div>'),t.hasArrows=!0}format_textdiff(t,e){t.out('<div class="jsondiffpatch-value">'),this.formatTextDiffString(t,e[0]),t.out("</div>")}}function l(t){let e=t,o=[[/&/g,"&amp;"],[/</g,"&lt;"],[/>/g,"&gt;"],[/'/g,"&apos;"],[/"/g,"&quot;"]];for(let t=0;t<o.length;t++)e=e.replace(o[t][0],o[t][1]);return e}let c=function(t){const e=t||document;((t,e,o)=>{let r=t.querySelectorAll(e);for(let t=0,e=r.length;t<e;t++)o(r[t])})(e,".jsondiffpatch-arrow",({parentNode:t,children:e,style:o})=>{let r=t,n=e[0],i=n.children[1];n.style.display="none";let s,a=(({textContent:t,innerText:e})=>t||e)(r.querySelector(".jsondiffpatch-moved-destination"));if((({children:t},e)=>{for(let o=0,r=t.length;o<r;o++)e(t[o],o)})(r.parentNode,t=>{t.getAttribute("data-key")===a&&(s=t)}),s)try{let t=s.offsetTop-r.offsetTop;n.setAttribute("height",Math.abs(t)+6),o.top=`${-8+(t>0?0:t)}px`;let e=t>0?`M30,0 Q-10,${Math.round(t/2)} 26,${t-4}`:`M30,${-t} Q-10,${Math.round(-t/2)} 26,4`;i.setAttribute("d",e),n.style.display=""}catch(t){}})};const u=(t,e,o)=>{let r=e||document.body,n="jsondiffpatch-unchanged-",i={showing:`${n}showing`,hiding:`${n}hiding`,visible:`${n}visible`,hidden:`${n}hidden`},s=r.classList;if(!s)return;if(!o)return s.remove(i.showing),s.remove(i.hiding),s.remove(i.visible),s.remove(i.hidden),void(!1===t&&s.add(i.hidden));!1===t?(s.remove(i.showing),s.add(i.visible),setTimeout(()=>{s.add(i.hiding)},10)):(s.remove(i.hiding),s.add(i.showing),s.remove(i.hidden));let a=setInterval(()=>{c(r)},100);setTimeout(()=>{s.remove(i.showing),s.remove(i.hiding),!1===t?(s.add(i.hidden),s.remove(i.visible)):(s.add(i.visible),s.remove(i.hidden)),setTimeout(()=>{s.remove(i.visible),clearInterval(a)},o+400)},o)},h=(t,e)=>u(!1,t,e);e.default=f;let p;function v(t,e){return p||(p=new f),p.format(t,e)}}});
//# sourceMappingURL=display-bundle.js.map